{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"node_modules/hexo-theme-next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/css/noscript.styl","path":"css/noscript.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/images/logo-algolia-nebula-blue-full.svg","path":"images/logo-algolia-nebula-blue-full.svg","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/bookmark.js","path":"js/bookmark.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/comments-buttons.js","path":"js/comments-buttons.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/config.js","path":"js/config.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/comments.js","path":"js/comments.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/motion.js","path":"js/motion.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/next-boot.js","path":"js/next-boot.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/pjax.js","path":"js/pjax.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/schedule.js","path":"js/schedule.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/schemes/muse.js","path":"js/schemes/muse.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/addtoany.js","path":"js/third-party/addtoany.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/fancybox.js","path":"js/third-party/fancybox.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/pace.js","path":"js/third-party/pace.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/quicklink.js","path":"js/third-party/quicklink.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/baidu-analytics.js","path":"js/third-party/analytics/baidu-analytics.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/google-analytics.js","path":"js/third-party/analytics/google-analytics.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/matomo.js","path":"js/third-party/analytics/matomo.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/growingio.js","path":"js/third-party/analytics/growingio.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/chat/chatra.js","path":"js/third-party/chat/chatra.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/chat/tidio.js","path":"js/third-party/chat/tidio.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/changyan.js","path":"js/third-party/comments/changyan.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/disqus.js","path":"js/third-party/comments/disqus.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/disqusjs.js","path":"js/third-party/comments/disqusjs.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/isso.js","path":"js/third-party/comments/isso.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/gitalk.js","path":"js/third-party/comments/gitalk.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/livere.js","path":"js/third-party/comments/livere.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/utterances.js","path":"js/third-party/comments/utterances.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/math/katex.js","path":"js/third-party/math/katex.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/math/mathjax.js","path":"js/third-party/math/mathjax.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/search/algolia-search.js","path":"js/third-party/search/algolia-search.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/search/local-search.js","path":"js/third-party/search/local-search.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/statistics/firestore.js","path":"js/third-party/statistics/firestore.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/statistics/lean-analytics.js","path":"js/third-party/statistics/lean-analytics.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/tags/mermaid.js","path":"js/third-party/tags/mermaid.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/tags/pdf.js","path":"js/third-party/tags/pdf.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/tags/wavedrom.js","path":"js/third-party/tags/wavedrom.js","modified":0,"renderable":1}],"Cache":[{"_id":"source/_data/footer.njk","hash":"a26c30fe3ac6afcdd4f3e4bcf1aba12639d192c9","modified":1698054445704},{"_id":"source/_data/head.njk","hash":"6734adfbfb959699fe49267dc762b257fa45bfd3","modified":1698053835855},{"_id":"source/_posts/2023-10-23-csp-模拟赛题解.md","hash":"b78f495b1bc3b195778d9beb8dab3aba034aaa29","modified":1698053711315},{"_id":"source/about/index.md","hash":"a7759eaa49b14886c2085ff438b1dbc17d7e4dab","modified":1698053711315},{"_id":"source/categories/index.md","hash":"d7086f3da243a956950e83594138d45607e2fb83","modified":1698053711315},{"_id":"source/tags/index.md","hash":"9c2c523a993ee7aa9fe260d877105aa6a15e8f49","modified":1698053711316},{"_id":"node_modules/hexo-theme-next/LICENSE.md","hash":"68fc9a03d50fd4b5ea97092b05967d1819dea2c4","modified":1698054248132},{"_id":"node_modules/hexo-theme-next/README.md","hash":"d6820f46d03a93bd6dc8b10f49f58aec82ad2b06","modified":1698054248223},{"_id":"node_modules/hexo-theme-next/_vendors.yml","hash":"bf0142e3cdb4c8da06e9aa971bc0bdf230f5db45","modified":1698054250448},{"_id":"node_modules/hexo-theme-next/_config.yml","hash":"dae3faa04648aeb0fd91961843a15122dcc73299","modified":1698054250446},{"_id":"node_modules/hexo-theme-next/package.json","hash":"282d6226513c39ad97793596922da638475a5f66","modified":1698054248053},{"_id":"node_modules/hexo-theme-next/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":1698054248054},{"_id":"node_modules/hexo-theme-next/docs/AUTHORS.md","hash":"a648823121563c34a177ae91f5a774b5e29f01a0","modified":1698054248055},{"_id":"node_modules/hexo-theme-next/docs/LICENSE.txt","hash":"f5b14f791b7cfa1d16da981d929152e088a5d1b8","modified":1698054250417},{"_id":"node_modules/hexo-theme-next/languages/README.md","hash":"b2567e32805dda79601157351a07e5ca9fe01315","modified":1698054248204},{"_id":"node_modules/hexo-theme-next/languages/ar.yml","hash":"7d0f39e8684284a04bb9808521c87fecda8bd131","modified":1698054250479},{"_id":"node_modules/hexo-theme-next/languages/bn.yml","hash":"564bed75da6e05b11dce6164508f97a15e2fb6c2","modified":1698054250513},{"_id":"node_modules/hexo-theme-next/languages/de.yml","hash":"79b37df731c29665dee6cd7c90d278e1edfb6e24","modified":1698054250546},{"_id":"node_modules/hexo-theme-next/languages/en.yml","hash":"ba0fd79a2b1d8db01a034180556061745965ff05","modified":1698054250579},{"_id":"node_modules/hexo-theme-next/languages/eo.yml","hash":"e34bb33ae827bf2f0727088599a73bc64bdad1b0","modified":1698054250612},{"_id":"node_modules/hexo-theme-next/languages/es.yml","hash":"dffc63ef42e1266b88e0acf08994fd17a9908d53","modified":1698054250645},{"_id":"node_modules/hexo-theme-next/languages/fa.yml","hash":"f3ffc444599f4ac92d62e9ed00a1490ebc277d70","modified":1698054250680},{"_id":"node_modules/hexo-theme-next/languages/fr.yml","hash":"8ac44e58f71a38b7697a2f7f98a6971ed818cb5b","modified":1698054250712},{"_id":"node_modules/hexo-theme-next/languages/it.yml","hash":"16d716ecfd748def2f6486ef5a82d0ab7ceb4890","modified":1698054250780},{"_id":"node_modules/hexo-theme-next/languages/ja.yml","hash":"543222bfc516aab6c33e8534f807972ecb8943a9","modified":1698054250812},{"_id":"node_modules/hexo-theme-next/languages/id.yml","hash":"929df147f4f17d638b07de5fe52ca13e2549ab1c","modified":1698054250746},{"_id":"node_modules/hexo-theme-next/languages/ko.yml","hash":"d345a303310c8a5f4836c3683f3580f861ebd1b4","modified":1698054250864},{"_id":"node_modules/hexo-theme-next/languages/nl.yml","hash":"3cb3687696635ec71b4ca40c5fc43b56acc8843e","modified":1698054250894},{"_id":"node_modules/hexo-theme-next/languages/pt-BR.yml","hash":"76b8576ce228d540a16b1f0af5af2cce20923194","modified":1698054250928},{"_id":"node_modules/hexo-theme-next/languages/pt.yml","hash":"70de366e10ea584ba039d40d6b35ac97f93454ad","modified":1698054250962},{"_id":"node_modules/hexo-theme-next/languages/ru.yml","hash":"c6d8de0ff7d8148d09993257cfd3b7aca755696c","modified":1698054250996},{"_id":"node_modules/hexo-theme-next/languages/si.yml","hash":"2d712eedf3f60d04d36c3108cf5a12e2a52e875c","modified":1698054251025},{"_id":"node_modules/hexo-theme-next/languages/th.yml","hash":"6829e998b39f8f143e20b276bb1f62d95a29de58","modified":1698054251076},{"_id":"node_modules/hexo-theme-next/languages/tk.yml","hash":"511726054873f6f8d7ce0d2e803f6731de0ddbe7","modified":1698054251092},{"_id":"node_modules/hexo-theme-next/languages/uk.yml","hash":"ff537047b4b4c3ca9a7b64fa7f428a9942751eeb","modified":1698054251155},{"_id":"node_modules/hexo-theme-next/languages/tr.yml","hash":"a57e4ed089b893a95f5e1ecff17ce625165f4d46","modified":1698054251122},{"_id":"node_modules/hexo-theme-next/languages/vi.yml","hash":"7ebcba5e1128784195e4681dffc9d34c4e873fec","modified":1698054251187},{"_id":"node_modules/hexo-theme-next/languages/zh-HK.yml","hash":"88ea50eeb9097ab4a87a44981a102d8594feb064","modified":1698054252389},{"_id":"node_modules/hexo-theme-next/languages/zh-CN.yml","hash":"741d7efe0262c9cdc2c648014b55599665d90f6b","modified":1698054252386},{"_id":"node_modules/hexo-theme-next/languages/zh-TW.yml","hash":"4695c87d6b81b3a23d16ad6513d9eaa925f8d8ad","modified":1698054252392},{"_id":"node_modules/hexo-theme-next/layout/_layout.njk","hash":"fc0a45112f2dcfc2642404e8934ea32a793c3bd7","modified":1698054248224},{"_id":"node_modules/hexo-theme-next/layout/archive.njk","hash":"d759f4d2cf5ddc6875ea250113a00662c1caf6d1","modified":1698054248267},{"_id":"node_modules/hexo-theme-next/layout/category.njk","hash":"c68b7343d0f8145010f93351908cc36ef6212ec1","modified":1698054248362},{"_id":"node_modules/hexo-theme-next/layout/index.njk","hash":"dd63e488ae8cc144335a5958acedf6a16edd7a92","modified":1698054248527},{"_id":"node_modules/hexo-theme-next/layout/page.njk","hash":"b0660b2af0ac7d3fda14ca4d9f2c9e79ef06c6f9","modified":1698054249806},{"_id":"node_modules/hexo-theme-next/layout/post.njk","hash":"0bfce9f133f501a9a4837257e3b862b3bbca15be","modified":1698054249821},{"_id":"node_modules/hexo-theme-next/layout/tag.njk","hash":"9e16ba20c28a7f2c6bc75aa427f48122301a30aa","modified":1698054249826},{"_id":"node_modules/hexo-theme-next/docs/ru/README.md","hash":"29c89a41b371f893e56c87ea61adabc444ec58cc","modified":1698054248171},{"_id":"node_modules/hexo-theme-next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"12a6631617695504d5cf2a94b57d87bd331bef6f","modified":1698054248082},{"_id":"node_modules/hexo-theme-next/docs/zh-CN/CONTRIBUTING.md","hash":"a089f7a8368ab0b7d7b9b7ec0ac3767a453435df","modified":1698054248129},{"_id":"node_modules/hexo-theme-next/docs/zh-CN/README.md","hash":"12a3e96581964a22b474cc739675d52ef93ff932","modified":1698054248173},{"_id":"node_modules/hexo-theme-next/layout/_macro/post-collapse.njk","hash":"abda600685ee972e1f6b7a2dcc56f13e2daa6263","modified":1698054249813},{"_id":"node_modules/hexo-theme-next/layout/_macro/post.njk","hash":"65e9112fb7eb26d2880db624554a99aca028140b","modified":1698054249821},{"_id":"node_modules/hexo-theme-next/layout/_macro/sidebar.njk","hash":"547c62ab14d9e05d2d9116db9048a677fbe1fb6d","modified":1698054249823},{"_id":"node_modules/hexo-theme-next/layout/_third-party/addtoany.njk","hash":"ef64c6bfb8540cd874701236b9be47db2496e98e","modified":1698054248225},{"_id":"node_modules/hexo-theme-next/layout/_third-party/fancybox.njk","hash":"844559f46e2ff1c8be234d5763703106e2072a7b","modified":1698054248397},{"_id":"node_modules/hexo-theme-next/layout/_third-party/index.njk","hash":"dfd7cdd6ba89f8c3deabc27726c7a350cadafd11","modified":1698054248463},{"_id":"node_modules/hexo-theme-next/layout/_third-party/quicklink.njk","hash":"0efed71ed530447718c4ea5bbd5fc8695b0b0d5f","modified":1698054249822},{"_id":"node_modules/hexo-theme-next/layout/_third-party/pace.njk","hash":"d7ad5714079f7f65446f880baf14722435ca9061","modified":1698054249801},{"_id":"node_modules/hexo-theme-next/layout/_partials/comments.njk","hash":"d0c470b0f6690aa217e9ada848c5e2e73fb27c6f","modified":1698054248380},{"_id":"node_modules/hexo-theme-next/layout/_partials/footer.njk","hash":"6fca18ed4234cf54146c2b3b97b0a6a3606ab33d","modified":1698054248430},{"_id":"node_modules/hexo-theme-next/layout/_partials/languages.njk","hash":"e43f22198cccb5f6e306b1ce0d28d12a4fb891f8","modified":1698054249699},{"_id":"node_modules/hexo-theme-next/layout/_partials/pagination.njk","hash":"bc719473ed5948ab6859449d60b8d36cfc1542b4","modified":1698054249807},{"_id":"node_modules/hexo-theme-next/layout/_partials/widgets.njk","hash":"e7f988ecddb2159313699a00827a45eca5622bd4","modified":1698054250231},{"_id":"node_modules/hexo-theme-next/layout/_scripts/index.njk","hash":"6668878a0f9a1166c6a879755f54a08d942da870","modified":1698054248462},{"_id":"node_modules/hexo-theme-next/layout/_scripts/vendors.njk","hash":"be80b9fe415a9a09d74c28e230995fd292dfc123","modified":1698054249828},{"_id":"node_modules/hexo-theme-next/scripts/events/index.js","hash":"bd9ea82376cd87df611ea3ae077875c7c595a3df","modified":1698054248028},{"_id":"node_modules/hexo-theme-next/scripts/tags/button.js","hash":"c6ad2ed544fbb25ecb5d820c36e76302504271b7","modified":1698054248004},{"_id":"node_modules/hexo-theme-next/scripts/tags/center-quote.js","hash":"92c19d796bdb3320df9caea59bf52df7a95d9da9","modified":1698054248006},{"_id":"node_modules/hexo-theme-next/scripts/tags/caniuse.js","hash":"935a311142a409c1896b3ae3f01fe7a9e2db1134","modified":1698054248005},{"_id":"node_modules/hexo-theme-next/scripts/tags/group-pictures.js","hash":"9ed799c329abf830f623689d7e136991256a24ca","modified":1698054248025},{"_id":"node_modules/hexo-theme-next/scripts/tags/index.js","hash":"1f6aba7820f1fb58b61969485148db21846e1aa9","modified":1698054248028},{"_id":"node_modules/hexo-theme-next/scripts/tags/link-grid.js","hash":"18a483c2d5afd701f6080ffdddf2d1321370336c","modified":1698054248032},{"_id":"node_modules/hexo-theme-next/scripts/tags/mermaid.js","hash":"4fb01ca650fa8b256b8d48f50dc1b18350bd3d6d","modified":1698054248036},{"_id":"node_modules/hexo-theme-next/scripts/tags/label.js","hash":"8a73348186113bae0a51ea2f891c1bb882fab05a","modified":1698054248031},{"_id":"node_modules/hexo-theme-next/scripts/tags/note.js","hash":"7b94ddb46b7d4b0fe815f2fbe4bd375f07f55363","modified":1698054248043},{"_id":"node_modules/hexo-theme-next/scripts/tags/pdf.js","hash":"344636b6fd7e27e8831c1e194039afc0d61931cd","modified":1698054248044},{"_id":"node_modules/hexo-theme-next/scripts/tags/tabs.js","hash":"0eabe51da40b4b13e16419c8fe02452d9a4fef73","modified":1698054248048},{"_id":"node_modules/hexo-theme-next/scripts/tags/video.js","hash":"2ee926448583be8f95af1f2884ae2c9c4830151d","modified":1698054248052},{"_id":"node_modules/hexo-theme-next/scripts/tags/wavedrom.js","hash":"b44dfeeb58b41945d469141787f3dbce4b117d08","modified":1698054248052},{"_id":"node_modules/hexo-theme-next/scripts/helpers/engine.js","hash":"d292b78485e8e8055712b0ed6de7cf559c5fbdcd","modified":1698054248020},{"_id":"node_modules/hexo-theme-next/scripts/helpers/font.js","hash":"3394185a7f0393c16ce52c8028f90da3e9239c55","modified":1698054248023},{"_id":"node_modules/hexo-theme-next/scripts/helpers/navigation.js","hash":"78107021101553c3d23e89290f7530b60cf4aa86","modified":1698054248040},{"_id":"node_modules/hexo-theme-next/scripts/helpers/next-config.js","hash":"ead37e9167b682f1fa34b5401c3050e18c7ee4a3","modified":1698054248041},{"_id":"node_modules/hexo-theme-next/scripts/helpers/next-paginator.js","hash":"e86c764b546e4fbb87970cabc4135a56f9ef9fe1","modified":1698054248042},{"_id":"node_modules/hexo-theme-next/scripts/helpers/next-url.js","hash":"6281d47c1de98eb38f3aa0f6df29bbb19d412173","modified":1698054248042},{"_id":"node_modules/hexo-theme-next/scripts/helpers/next-vendors.js","hash":"957241c28796ff352de7f4cffba7bb289b043586","modified":1698054248043},{"_id":"node_modules/hexo-theme-next/scripts/filters/locals.js","hash":"9eb5310664759931287dd28ea39165dfb67f12ed","modified":1698054248034},{"_id":"node_modules/hexo-theme-next/scripts/filters/default-injects.js","hash":"872f01cb10e422a648ea505436532e776e92926b","modified":1698054248016},{"_id":"node_modules/hexo-theme-next/scripts/filters/post.js","hash":"fdc8a0af90035e89c3fcb754a0eb189b8951a2bc","modified":1698054248046},{"_id":"node_modules/hexo-theme-next/scripts/filters/minify.js","hash":"447db39d17775b2bd18d8af9c9d65b7b8449f751","modified":1698054248037},{"_id":"node_modules/hexo-theme-next/source/css/_colors.styl","hash":"3c6798c10cc220d83481cb3f3782e78558cee789","modified":1698054250235},{"_id":"node_modules/hexo-theme-next/source/css/_mixins.styl","hash":"83647a6207333b9609ba90b0946b3fa9548e6381","modified":1698054250243},{"_id":"node_modules/hexo-theme-next/source/css/main.styl","hash":"921a58577f411cf4eb5cfd66db0a241f8f88578c","modified":1698054250271},{"_id":"node_modules/hexo-theme-next/source/css/noscript.styl","hash":"dadc81256afb127b77eac6763d5ee0ec9c77f0a3","modified":1698054250276},{"_id":"node_modules/hexo-theme-next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1698053678714},{"_id":"node_modules/hexo-theme-next/source/images/avatar.gif","hash":"2dbc3e2f2d624b2ca1afe6edc2ca17307f1950c8","modified":1698053678714},{"_id":"node_modules/hexo-theme-next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1698053678715},{"_id":"node_modules/hexo-theme-next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1698053678715},{"_id":"node_modules/hexo-theme-next/source/images/logo-algolia-nebula-blue-full.svg","hash":"b85e274207b1392782476a0430feac98db1e7da0","modified":1698053678716},{"_id":"node_modules/hexo-theme-next/source/images/logo.svg","hash":"099e11ab995a2c8981427a85476d082609848c77","modified":1698053678762},{"_id":"node_modules/hexo-theme-next/source/js/bookmark.js","hash":"0f563ffbf05fad30e854e413ab17ff7164ab5a53","modified":1698054248003},{"_id":"node_modules/hexo-theme-next/source/js/comments-buttons.js","hash":"1a7344440321713426a0b2ab17e276b5bdf85ade","modified":1698054248011},{"_id":"node_modules/hexo-theme-next/source/js/config.js","hash":"4c4ebbe3b3f3841a26f9d5af6d0ba8bc6da01c54","modified":1698054248015},{"_id":"node_modules/hexo-theme-next/source/js/comments.js","hash":"66ae2e26ea36a41b72c638ea8b220296638ae952","modified":1698054248012},{"_id":"node_modules/hexo-theme-next/source/js/motion.js","hash":"770d63c26f22705311028a36b52e999cc8a2da82","modified":1698054248038},{"_id":"node_modules/hexo-theme-next/source/js/next-boot.js","hash":"745bd828205da7e5fbd3f860cc3697097630f5f3","modified":1698054248041},{"_id":"node_modules/hexo-theme-next/source/js/pjax.js","hash":"b03ba78c6916ad2f390d55bc1bc18fafb64b0ebf","modified":1698054248045},{"_id":"node_modules/hexo-theme-next/source/js/schedule.js","hash":"a1333258726caf84f368a8f8454639c7dc1626bb","modified":1698054248047},{"_id":"node_modules/hexo-theme-next/source/js/utils.js","hash":"d775148c2bf20c028622af5609a788167352bf1e","modified":1698054248050},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/baidu-analytics.njk","hash":"6215309aee028dcb734452beec448c5afb6c63fc","modified":1698054248268},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/cloudflare.njk","hash":"a5b8297c2c383124dd6a56e256ecc0c0dcf489be","modified":1698054248369},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/google-analytics.njk","hash":"d89066ff53879693f023e540d59c86137172c529","modified":1698054248432},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/growingio.njk","hash":"8afaa772c390bd9d53a5cff9645ac3168334eb98","modified":1698054248432},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/index.njk","hash":"f900306497b133e8b098bd9f4b96b93d1d96c185","modified":1698054248463},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/matomo.njk","hash":"4e89648a8ec8194c5823064cbca39c938a799006","modified":1698054249787},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/plausible.njk","hash":"ef9f2bb7110507f1c4336800af9157d5fa9765bd","modified":1698054249810},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/microsoft-clarity.njk","hash":"9dc00fcb0a05899f048eace9f9160b78956655d5","modified":1698054249799},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/umami.njk","hash":"3343750682fbd8535e50f8129be3003ad26015b4","modified":1698054249827},{"_id":"node_modules/hexo-theme-next/layout/_third-party/chat/tidio.njk","hash":"02aab857c27fc103216029be991688b12a73a525","modified":1698054249827},{"_id":"node_modules/hexo-theme-next/layout/_third-party/chat/chatra.njk","hash":"d7263fca16d0278ccf1f6aa1c6df6902a6344a09","modified":1698054248368},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/disqus.njk","hash":"9375b19a89b7fa9474e558d085af5448d4c5c50c","modified":1698054248381},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/changyan.njk","hash":"d1c950f8fbdf85e7a3eae5463767a89e858e8220","modified":1698054248366},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/disqusjs.njk","hash":"0749cb6902baecdfd01f779a2a2513f6d2f6a823","modified":1698054248381},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/gitalk.njk","hash":"b63b7e2ede0d3e66e732fa1a06bda9b19e1e85d4","modified":1698054248431},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/isso.njk","hash":"64cc3bdaf644fd32c0d0a247f29f5b6904da9af3","modified":1698054248528},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/livere.njk","hash":"3b13b09fba84ec6000886890a6710736a2b8fafe","modified":1698054249702},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/utterances.njk","hash":"5a94032bc3512a10ad4328fc19ec07b819a1d687","modified":1698054249828},{"_id":"node_modules/hexo-theme-next/layout/_third-party/math/katex.njk","hash":"1ebf658690468ea197bdd0416eb7cfa4bd0b083a","modified":1698054248529},{"_id":"node_modules/hexo-theme-next/layout/_third-party/math/index.njk","hash":"abf37fc55aa86702118e8fdf5bf2d389dd589aa0","modified":1698054248488},{"_id":"node_modules/hexo-theme-next/layout/_third-party/math/mathjax.njk","hash":"3677017fd4572b158311f5f5d870590ab25184e0","modified":1698054249704},{"_id":"node_modules/hexo-theme-next/layout/_third-party/search/algolia-search.njk","hash":"24ed76e0c72a25ac152820c750a05826a706b6f4","modified":1698054248227},{"_id":"node_modules/hexo-theme-next/layout/_third-party/search/localsearch.njk","hash":"e45ea3542cdc9ed7ec8447b5e6f35df4c5e82758","modified":1698054249704},{"_id":"node_modules/hexo-theme-next/layout/_third-party/statistics/busuanzi-counter.njk","hash":"a4bc501da0f22f7e420f0ca47e83988ce90b1368","modified":1698054248333},{"_id":"node_modules/hexo-theme-next/layout/_third-party/statistics/firestore.njk","hash":"d32ebe94560fa95824478ebbff531bffc47b194d","modified":1698054248397},{"_id":"node_modules/hexo-theme-next/layout/_third-party/statistics/lean-analytics.njk","hash":"2446e748cdc102c78492216319ac02148db7daf6","modified":1698054249700},{"_id":"node_modules/hexo-theme-next/layout/_third-party/statistics/index.njk","hash":"568ddf7955d11d93fb5e842b403a7ac8b1b7fdb1","modified":1698054248489},{"_id":"node_modules/hexo-theme-next/layout/_third-party/tags/mermaid.njk","hash":"099e031f52fb8e47b3af5b2684737efc9e643ee7","modified":1698054249797},{"_id":"node_modules/hexo-theme-next/layout/_third-party/tags/pdf.njk","hash":"2c81984cc4f5123103460442f6e046f5b6c97127","modified":1698054249809},{"_id":"node_modules/hexo-theme-next/layout/_third-party/tags/wavedrom.njk","hash":"02202bf563fb5eedde2ccad4d6c5b9109d30a703","modified":1698054249829},{"_id":"node_modules/hexo-theme-next/layout/_partials/head/head-unique.njk","hash":"8da52a144060db1a0a088ccb2e6cc8376d1fce70","modified":1698054248433},{"_id":"node_modules/hexo-theme-next/layout/_partials/head/head.njk","hash":"5388b157bba4a40b9312f4a45c6678974ccf0837","modified":1698054248459},{"_id":"node_modules/hexo-theme-next/layout/_partials/header/brand.njk","hash":"dd9c4c03e99dfde0dfb8edefcb2c933f2f560efc","modified":1698054248296},{"_id":"node_modules/hexo-theme-next/layout/_partials/header/menu-item.njk","hash":"41a8b0cc16f60fa085cb719d07216d86b6bc4bf8","modified":1698054249791},{"_id":"node_modules/hexo-theme-next/layout/_partials/header/index.njk","hash":"650de421a8ce4cf685428ffbe0087ff84cbd1356","modified":1698054248460},{"_id":"node_modules/hexo-theme-next/layout/_partials/header/menu.njk","hash":"ee6fc2f111572d3eeab0a2fecbb2d6b3e37ab26b","modified":1698054249794},{"_id":"node_modules/hexo-theme-next/layout/_partials/header/sub-menu.njk","hash":"06480d8ec5f0b87eafd47f082f07968d7282dd5c","modified":1698054249825},{"_id":"node_modules/hexo-theme-next/layout/_partials/page/categories.njk","hash":"17156d99941f28a225951ffdcfa9a115e20dc2d2","modified":1698054248335},{"_id":"node_modules/hexo-theme-next/layout/_partials/page/breadcrumb.njk","hash":"89825e75cc45e9709fa6ba89883669eedaff6f46","modified":1698054248330},{"_id":"node_modules/hexo-theme-next/layout/_partials/page/page-header.njk","hash":"7ed4f102a1825195cff8d7995bf9219f323a9034","modified":1698054249803},{"_id":"node_modules/hexo-theme-next/layout/_partials/page/schedule.njk","hash":"0f4bc8e257da60f77c0c1738607b2bde55810684","modified":1698054249823},{"_id":"node_modules/hexo-theme-next/layout/_partials/page/tags.njk","hash":"a18d1598e36cc72f2b0b24c3cc3c5990dfaa3254","modified":1698054249826},{"_id":"node_modules/hexo-theme-next/layout/_partials/post/post-copyright.njk","hash":"bfff923526d6800218f08dba6ce0bbf5c17755fd","modified":1698054249815},{"_id":"node_modules/hexo-theme-next/layout/_partials/post/post-followme.njk","hash":"c1e33b4889f75acc490af3c8bde0ec56c518ff41","modified":1698054249816},{"_id":"node_modules/hexo-theme-next/layout/_partials/post/post-meta.njk","hash":"9fa47e4fb342811da590ee4adc91cf81118c0a39","modified":1698054249818},{"_id":"node_modules/hexo-theme-next/layout/_partials/post/post-related.njk","hash":"e0986db00a0201dd3c60570f964829c84ba5bc68","modified":1698054249818},{"_id":"node_modules/hexo-theme-next/layout/_partials/post/post-reward.njk","hash":"e8b8a7c41e9ec612d0c0c73419529d55d1c16256","modified":1698054249819},{"_id":"node_modules/hexo-theme-next/layout/_partials/post/post-share.njk","hash":"16696990e4ce65fc8db18c4635082a5d5d06ff07","modified":1698054249819},{"_id":"node_modules/hexo-theme-next/layout/_partials/sidebar/site-overview.njk","hash":"bc5708e38b6070dff0cab6bf9480971017ce4dda","modified":1698054249824},{"_id":"node_modules/hexo-theme-next/layout/_partials/search/algolia-search.njk","hash":"efb2b6f19df02ba5ae623a1f274fff52aed21e6f","modified":1698054248226},{"_id":"node_modules/hexo-theme-next/layout/_partials/search/index.njk","hash":"8f6f256ab3b351ffc80f1f3f1d9834e9a7cfac31","modified":1698054248461},{"_id":"node_modules/hexo-theme-next/layout/_partials/search/localsearch.njk","hash":"661f7acae43f0be694266323320f977d84119abe","modified":1698054249703},{"_id":"node_modules/hexo-theme-next/scripts/events/lib/config.js","hash":"9ec51eb61f7fee612ffc5252f489003a0fa301fc","modified":1698054248014},{"_id":"node_modules/hexo-theme-next/scripts/events/lib/highlight.js","hash":"6aec7b2c38c50989a23bfaa0d560e75c7f553e12","modified":1698054248027},{"_id":"node_modules/hexo-theme-next/scripts/events/lib/navigation.js","hash":"dd3562686d95a50375e6fd32e717ccb0d99c1e3d","modified":1698054248039},{"_id":"node_modules/hexo-theme-next/scripts/events/lib/injects.js","hash":"d987709267a1bc6e5014411e9983d7c49c102c16","modified":1698054248029},{"_id":"node_modules/hexo-theme-next/scripts/events/lib/utils.js","hash":"6853e5433e3eaa19ea43fa20b08d956ba4cec4ac","modified":1698054248049},{"_id":"node_modules/hexo-theme-next/scripts/events/lib/vendors.js","hash":"464db1e7182e5b9cdbd32e8b5368d5e683b1d9c7","modified":1698054248051},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/changyan.js","hash":"5798cfc8f63665031dd3e01debed051628cec319","modified":1698054248008},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/common.js","hash":"19a402a225c31edffc50f202a14e0d582d3db23e","modified":1698054248012},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/default-config.js","hash":"93ee5f9109dad885dc38c49bcee630c10f9dce6e","modified":1698054248016},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/disqus.js","hash":"7f71d6b271ba65ff333d5682e7575711d368c0d2","modified":1698054248017},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/disqusjs.js","hash":"a600a98e7436edeb31e291abca359885567df3c9","modified":1698054248018},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/isso.js","hash":"ff8b5b5145220a17d0ecd9508ba9bd2d3b2da47d","modified":1698054248029},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/gitalk.js","hash":"7bb7dafdd7f6bca8464b54e17e552ce7f1714195","modified":1698054248023},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/livere.js","hash":"5a07d8bb52bc1d51a624ca8db54be144566c306b","modified":1698054248033},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/utterances.js","hash":"d3bded697bc32dace689d2a6dfb6eb7514169d15","modified":1698054248050},{"_id":"node_modules/hexo-theme-next/source/css/_variables/Gemini.styl","hash":"96e0a7c2a65ce68215e17e369085b2ea2f1334f2","modified":1698054250258},{"_id":"node_modules/hexo-theme-next/source/css/_variables/Mist.styl","hash":"a1418c9dc8c0f1a0ad4ded0f4627c45bf0db1a10","modified":1698054250273},{"_id":"node_modules/hexo-theme-next/source/css/_variables/Muse.styl","hash":"e3be898f5ebcf435a26542653a9297ff2c71aeb0","modified":1698054250274},{"_id":"node_modules/hexo-theme-next/source/css/_variables/base.styl","hash":"c4fc4e862d09221265ab1466085f057be2ad2e4d","modified":1698054250249},{"_id":"node_modules/hexo-theme-next/source/css/_variables/Pisces.styl","hash":"48f4f277946a168d0db1ea02804e85c22ca2c7db","modified":1698054250278},{"_id":"node_modules/hexo-theme-next/source/js/schemes/muse.js","hash":"ba7ba2c129d1f240c6a22cec3e53f3f22af64b6b","modified":1698054248039},{"_id":"node_modules/hexo-theme-next/source/js/third-party/addtoany.js","hash":"5276c8f78ee562a8965216dc67d762e59cb4a9f2","modified":1698054247999},{"_id":"node_modules/hexo-theme-next/source/js/third-party/fancybox.js","hash":"819f382c561fe5ec23c67cc5fabd63dd1cc22dc1","modified":1698054248021},{"_id":"node_modules/hexo-theme-next/source/js/third-party/pace.js","hash":"0ef04218b93561ba4d0ff420d556c3d90a756d32","modified":1698054248044},{"_id":"node_modules/hexo-theme-next/source/js/third-party/quicklink.js","hash":"eed02e6fced8e5a653077205d4d4d7834ca71472","modified":1698054248046},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Gemini/index.styl","hash":"9dfe853c901bdc52fc950bacdf15484dbb9bf140","modified":1698054250269},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Mist/_header.styl","hash":"dafc6d23c80d6fe3e55a7711e94210d2479b629a","modified":1698054250237},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Mist/_menu.styl","hash":"fb550935d374e0bdf1097fce187337dc05cad3e1","modified":1698054250241},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Mist/_layout.styl","hash":"fa4fd8f76464e214fb7318f325b13c2b62f4b478","modified":1698054250239},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Mist/_posts-expand.styl","hash":"485d23ccb42c0d0c8ead7ea8930dd3e06d79a285","modified":1698054250244},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Mist/index.styl","hash":"ab16a3dcdc0393b9b582ef59dcc13db9320e917c","modified":1698054250269},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Pisces/_header.styl","hash":"ac2dc0ce9c775a83ef7132ae957b54539366ac9c","modified":1698054250239},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Pisces/_menu.styl","hash":"72dc825c50357402c342d62ab60fc0c478ab6bc1","modified":1698054250242},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Pisces/_layout.styl","hash":"26a0cba1eee5de45a45a5e14e17707f905390512","modified":1698054250241},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Pisces/_sidebar.styl","hash":"91dbf3ca5c3a613d4e30618c120da535bf2d0336","modified":1698054250245},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Pisces/index.styl","hash":"8000075b227749a7495eaf417cac6ccfbe441580","modified":1698054250270},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"778ed2ad5643b93970c95626b325defeb586733f","modified":1698054250246},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Muse/_header.styl","hash":"3fbfab591f280e2e7f3b0265901c93bc4bd137ed","modified":1698054250238},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Muse/_layout.styl","hash":"6569a6640f79d247a8235b3914772c0e2f99ead2","modified":1698054250240},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Muse/_sidebar.styl","hash":"547c0b5cd5e7ea10d21863d13a6b16579a49396c","modified":1698054250244},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Muse/_menu.styl","hash":"82cda756f5b7092df2eee6641b9786df71623bdb","modified":1698054250242},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Muse/_sub-menu.styl","hash":"c48ccd8d6651fe1a01faff8f01179456d39ba9b1","modified":1698054250245},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Muse/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":1698054250270},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/back-to-top.styl","hash":"7664491542046df9a3887cf40a06e00c0b4086a9","modified":1698054250247},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/index.styl","hash":"2298e521253b3bf376a2412271bc2a7d305051f3","modified":1698054250260},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/reading-progress.styl","hash":"90a86045a33c1bae49fc2f6fa1e1b53170c7f77b","modified":1698054250284},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/index.styl","hash":"8e34df131830d4fa3725e4590a672ba1cf1903e5","modified":1698054250264},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/mobile.styl","hash":"1dbf2c339adcd27026c3a2ded32ee91ce08cea26","modified":1698054250274},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/base.styl","hash":"d0a7c99095f490b0d2ed6b1be43d435960798cec","modified":1698054250248},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/buttons.styl","hash":"a042571d85ff7265f799004239a45f36b716b8a6","modified":1698054250252},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/comments.styl","hash":"e4fecc889ba3317a64e9abba5842c79dff9b7827","modified":1698054250255},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/index.styl","hash":"523fb7b653b87ae37fc91fc8813e4ffad87b0d7e","modified":1698054250266},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/normalize.styl","hash":"b56367ea676ea8e8783ea89cd4ab150c7da7a060","modified":1698054250275},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/pagination.styl","hash":"f4228c759db4a650c8d38745c2edd1dc83c45687","modified":1698054250277},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tables.styl","hash":"e840b23d33023e6d45e018f6e84b683dd56efd8d","modified":1698054250330},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/toggles.styl","hash":"782ee1fc5e669d3ddbfeb82b73ad7fe561f1a4fb","modified":1698054250406},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/baidu-analytics.js","hash":"f629acc46ff40c071ffd31b77d5c7616f0fdd778","modified":1698054248002},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/google-analytics.js","hash":"59684383385059dc4f8a1ff85dbbeb703bcdbcb5","modified":1698054248025},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/matomo.js","hash":"c6a25b26a1443caa70b47fd3dfa282271574deb5","modified":1698054248035},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/growingio.js","hash":"78dd3cf04082b7dbe6246e404b2aa8e726922402","modified":1698054248026},{"_id":"node_modules/hexo-theme-next/source/js/third-party/chat/chatra.js","hash":"c32180522788c10e51df1803aa6842ef0432ddc9","modified":1698054248010},{"_id":"node_modules/hexo-theme-next/source/js/third-party/chat/tidio.js","hash":"b0079f6a4601e06ca6fe46e83a2f5af553e9bc3c","modified":1698054248048},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/changyan.js","hash":"260d1a77d6a3bb33a579d3e4cca1997003e799b5","modified":1698054248009},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/disqus.js","hash":"da361917d65e5dca8362f8cdeb6c8cc0e8316cec","modified":1698054248018},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/disqusjs.js","hash":"1e826dea3f684c0515f362dc1352447a1f0eae71","modified":1698054248019},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/isso.js","hash":"753a873b6f566aff5ba77ca23f91b78eb880ca64","modified":1698054248030},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/gitalk.js","hash":"0ec038cf83e8ec067534f16a54041e47a3c1e59a","modified":1698054248024},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/livere.js","hash":"2247d88c934c765c43013337860774aaa99f0b31","modified":1698054248033},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/utterances.js","hash":"f67f90eb03e284c82da2b8cf2f1e31801813c16d","modified":1698054248051},{"_id":"node_modules/hexo-theme-next/source/js/third-party/math/mathjax.js","hash":"5c749b9c1c3bb738122d0516211ecff6496d4907","modified":1698054248035},{"_id":"node_modules/hexo-theme-next/source/js/third-party/math/katex.js","hash":"83c54ee536e487a1031783443fe0cb63b1b4767e","modified":1698054248030},{"_id":"node_modules/hexo-theme-next/source/js/third-party/search/algolia-search.js","hash":"fdb7b7cef1a147d897e7f7cd8903b58368ec2062","modified":1698054248001},{"_id":"node_modules/hexo-theme-next/source/js/third-party/search/local-search.js","hash":"4536cb6d0a9bbaaa86fab3fa0101f6a3a3ec5a76","modified":1698054248034},{"_id":"node_modules/hexo-theme-next/source/js/third-party/statistics/firestore.js","hash":"6e0682bb42170d61b13b786295f45f9c785f8b73","modified":1698054248022},{"_id":"node_modules/hexo-theme-next/source/js/third-party/tags/mermaid.js","hash":"6bf821310342c5b87a631873e7650a475a0765f1","modified":1698054248037},{"_id":"node_modules/hexo-theme-next/source/js/third-party/statistics/lean-analytics.js","hash":"835cbf54c49ef1327f47df70ff2636ad36b6f57d","modified":1698054248032},{"_id":"node_modules/hexo-theme-next/source/js/third-party/tags/pdf.js","hash":"af78c22f0e61c8c8aa8794e585e0d632c6d4fcb8","modified":1698054248044},{"_id":"node_modules/hexo-theme-next/source/js/third-party/tags/wavedrom.js","hash":"40dcd10df6edf124088c329346e0cc0bdac74ef1","modified":1698054248052},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/index.styl","hash":"098d4bd034e986fcf7e443eac4fc2193935461b7","modified":1698054250261},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-body.styl","hash":"56d5b7ff73f466c9ae54f7204ae899281295d749","modified":1698054250279},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-followme.styl","hash":"1ecfd64507954810b07a9d21fb5305b5378feda0","modified":1698054250281},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-collapse.styl","hash":"7369928305330c73ae0b3f063a681a8384d8fde4","modified":1698054250280},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-footer.styl","hash":"11497388f124bfbb4001495a67d3629a9f618405","modified":1698054250281},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-gallery.styl","hash":"aa366d37389760c8595529b850f461569577a1c5","modified":1698054250282},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-header.styl","hash":"1191f1bfa5c43e54be8e5b3cc0d802984e161747","modified":1698054250282},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-reward.styl","hash":"04cf4a69537fc14d3b8904f965d283356853847f","modified":1698054250284},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-nav.styl","hash":"9ac6f477177264c26a46e8333b8456720a0444dc","modified":1698054250283},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-widgets.styl","hash":"ebfba158a0a4af3d1dabcacbc58986664de52140","modified":1698054250284},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/pages/categories.styl","hash":"b6e2eb1550a7845cb2adf86081a4ab6c7bde1e68","modified":1698054250254},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/pages/breadcrumb.styl","hash":"8afdc311c6b8db121758371f95cf1c5e77354f42","modified":1698054250252},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/pages/index.styl","hash":"7504dbc5c70262b048143b2c37d2b5aa2809afa2","modified":1698054250260},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/pages/schedule.styl","hash":"6b816c2511242ee503fb5f34cd3e4dcdafc06b85","modified":1698054250286},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/pages/tag-cloud.styl","hash":"1a81d1a71fcf0699629ce6e72dfd0a15f3a2dd0a","modified":1698054250404},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/gitalk.styl","hash":"8f094c4ac17e2ab45569b12d157747f9c7333c12","modified":1698054250259},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/disqusjs.styl","hash":"877a537d5b95beb048142e4fdee6f17e6ef9c7bb","modified":1698054250257},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/search.styl","hash":"e72799ce3f9b79753e365b2f8c8ef6c310668d4a","modified":1698054250286},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/index.styl","hash":"54d12e2c5d9982f7b9e5b23be5133954a8514e9d","modified":1698054250261},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/math.styl","hash":"9d995eb4871a6c273d9d51558676a1fdabf69e72","modified":1698054250272},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/utterances.styl","hash":"56d90ae0559caa55b75f3c300ff2711f9ed65fc4","modified":1698054250408},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/footer/index.styl","hash":"4e967702cf4c637132346bc74ec8854426f1a68c","modified":1698054250263},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/header/bookmark.styl","hash":"e74f4bb47a101b014ee2a1783c87f3b87323f9a0","modified":1698054250251},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/header/index.styl","hash":"6e0d0796ef7fbbb62ffdfb448753a850de82c74f","modified":1698054250263},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/header/github-banner.styl","hash":"38c64c2d04e46848382bfa246a0e9c508294767b","modified":1698054250259},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/header/menu.styl","hash":"bbbc40b03cb299d2a6a568f329b2ce98e1cdc430","modified":1698054250272},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/header/site-meta.styl","hash":"a851e9d5aefcd027c95eeb323860b6da70f202d1","modified":1698054250321},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/header/site-nav.styl","hash":"bf3ad8b4268f763a1e26377681644887694bc009","modified":1698054250325},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/index.styl","hash":"da5e88f8debd5ac8d7af5c6ba6240df66104955f","modified":1698054250265},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/related-posts.styl","hash":"b05908f04ef95f2d91e6eba89b12411c378d050f","modified":1698054250284},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-author-links.styl","hash":"0847400d8579b0a2dd1bf662c78954c10adf2680","modified":1698054250286},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-author.styl","hash":"5b38ac4a0f1ade0e681aff0e3366c481d9cf3dcd","modified":1698054250287},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-blogroll.styl","hash":"c6a27beb3f741211a14576026f3b4cfc44cc6407","modified":1698054250287},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-nav.styl","hash":"24752d145c6fb8f5344dca9c7b9640839c02e009","modified":1698054250288},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-button.styl","hash":"46eece42510c2c89bb9209afb0262ad76a4b0b36","modified":1698054250288},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-toc.styl","hash":"c2e354a565c8c1b32bd0ceacc972b17982758b67","modified":1698054250289},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-toggle.styl","hash":"9a7c71560fbdc936ad4e736fe15063ea3e8a644b","modified":1698054250289},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/site-state.styl","hash":"26dd0adfcb1db6df29c6090c8d7e9b5a43583fb0","modified":1698054250327},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/highlight/copy-code.styl","hash":"f634f94828620e88c3f5a8db56f7944f6ba232b0","modified":1698054250256},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/highlight/fold.styl","hash":"42a0b65491ad85438596b3fe0b7f23973e4cef34","modified":1698054250257},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/highlight/index.styl","hash":"138f78147bc6bd6005f329ada34dc79b7625542d","modified":1698054250265},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/blockquote-center.styl","hash":"d6418fd2bbfba7b73ddf11ec62db9637fdf5d8af","modified":1698054250250},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/group-pictures.styl","hash":"393ff96234e4196b569d4b11496774eb78e147de","modified":1698054250259},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/index.styl","hash":"22cd37bd5df9972d5074710896aba4424ad5161c","modified":1698054250267},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/label.styl","hash":"debee14539272fbe3835a7d3853af2230baa3501","modified":1698054250270},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/link-grid.styl","hash":"7f8a7345e6537a62cd9e9a94c8f7065b541d9b04","modified":1698054250271},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/mermaid.styl","hash":"48d35dba575a7c9e8845b16652e76b7d4a4646de","modified":1698054250273},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/pdf.styl","hash":"b6654a1d7cf82577d8263faffee8af3ad4a5c0e8","modified":1698054250277},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/tabs.styl","hash":"33dd6ad015dde65fd46f34961655442e8e82b52e","modified":1698054250402},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/note.styl","hash":"98d4c20aff0f0fcfe1824017fb06ab21ef0d218e","modified":1698054250277},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/wavedrom.styl","hash":"af113411ad9cca7674177be36af8dd399680834d","modified":1698054250409}],"Category":[{"name":"解题报告","_id":"clo2pki6i0004xggc2uc3c0a6"}],"Data":[{"_id":"head","data":"<!-- Google tag (gtag.js) -->\n<script async src=\"https://www.googletagmanager.com/gtag/js?id=G-VX4QKX0253\"></script>\n<script>\n  window.dataLayer = window.dataLayer || [];\n  function gtag(){dataLayer.push(arguments);}\n  gtag('js', new Date());\n\n  gtag('config', 'G-VX4QKX0253');\n</script>\n<script async src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-9876722958159423\"\n     crossorigin=\"anonymous\"></script>\n<script async src=\"https://umami.kierankihn.com/script.js\" data-website-id=\"bc1a5eef-c8f3-4836-9dc5-2f90fc23e262\"></script>"},{"_id":"footer","data":"<div class=\"powered-by\">萌ICP备 <a href=\"https://icp.gov.moe/?keyword=20237857\" target=\"_blank\">20237857</a> 号</div>"}],"Page":[{"title":"tags","date":"2023-10-23T06:23:22.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2023-10-23 14:23:22\ntype: \"tags\"\n---\n","updated":"2023-10-23T09:35:11.316Z","path":"tags/index.html","comments":1,"layout":"page","_id":"clo2pki690000xggc5qo7ca4l","content":"","site":{"data":{"head":"<!-- Google tag (gtag.js) -->\n<script async src=\"https://www.googletagmanager.com/gtag/js?id=G-VX4QKX0253\"></script>\n<script>\n  window.dataLayer = window.dataLayer || [];\n  function gtag(){dataLayer.push(arguments);}\n  gtag('js', new Date());\n\n  gtag('config', 'G-VX4QKX0253');\n</script>\n<script async src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-9876722958159423\"\n     crossorigin=\"anonymous\"></script>\n<script async src=\"https://umami.kierankihn.com/script.js\" data-website-id=\"bc1a5eef-c8f3-4836-9dc5-2f90fc23e262\"></script>","footer":"萌ICP备 <a href=\"https://icp.gov.moe/?keyword=20237857\" target=\"_blank\">20237857</a> 号"}},"excerpt":"","more":""},{"title":"About","date":"2023-10-23T06:23:30.000Z","type":"about","_content":"## 欢迎来到 Kieran Kihn 的小窝\n\n我的联系方式:\n- [邮箱](mailto:kierankihn@protonmail.com)\n- [Telegram](https://t.me/doubleki437461)\n- [Github](https://github.com/kierankihn)\n- [Twitter](https://twitter.com/doubleki437461)\n","source":"about/index.md","raw":"---\ntitle: About\ndate: 2023-10-23 14:23:30\ntype: about\n---\n## 欢迎来到 Kieran Kihn 的小窝\n\n我的联系方式:\n- [邮箱](mailto:kierankihn@protonmail.com)\n- [Telegram](https://t.me/doubleki437461)\n- [Github](https://github.com/kierankihn)\n- [Twitter](https://twitter.com/doubleki437461)\n","updated":"2023-10-23T09:35:11.315Z","path":"about/index.html","comments":1,"layout":"page","_id":"clo2pki6c0001xggcb6sk64fv","content":"<h2 id=\"欢迎来到-Kieran-Kihn-的小窝\"><a href=\"#欢迎来到-Kieran-Kihn-的小窝\" class=\"headerlink\" title=\"欢迎来到 Kieran Kihn 的小窝\"></a>欢迎来到 Kieran Kihn 的小窝</h2><p>我的联系方式:</p>\n<ul>\n<li><a href=\"mailto:kierankihn@protonmail.com\">邮箱</a></li>\n<li><a href=\"https://t.me/doubleki437461\">Telegram</a></li>\n<li><a href=\"https://github.com/kierankihn\">Github</a></li>\n<li><a href=\"https://twitter.com/doubleki437461\">Twitter</a></li>\n</ul>\n","site":{"data":{"head":"<!-- Google tag (gtag.js) -->\n<script async src=\"https://www.googletagmanager.com/gtag/js?id=G-VX4QKX0253\"></script>\n<script>\n  window.dataLayer = window.dataLayer || [];\n  function gtag(){dataLayer.push(arguments);}\n  gtag('js', new Date());\n\n  gtag('config', 'G-VX4QKX0253');\n</script>\n<script async src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-9876722958159423\"\n     crossorigin=\"anonymous\"></script>\n<script async src=\"https://umami.kierankihn.com/script.js\" data-website-id=\"bc1a5eef-c8f3-4836-9dc5-2f90fc23e262\"></script>","footer":"萌ICP备 <a href=\"https://icp.gov.moe/?keyword=20237857\" target=\"_blank\">20237857</a> 号"}},"excerpt":"","more":"<h2 id=\"欢迎来到-Kieran-Kihn-的小窝\"><a href=\"#欢迎来到-Kieran-Kihn-的小窝\" class=\"headerlink\" title=\"欢迎来到 Kieran Kihn 的小窝\"></a>欢迎来到 Kieran Kihn 的小窝</h2><p>我的联系方式:</p>\n<ul>\n<li><a href=\"mailto:kierankihn@protonmail.com\">邮箱</a></li>\n<li><a href=\"https://t.me/doubleki437461\">Telegram</a></li>\n<li><a href=\"https://github.com/kierankihn\">Github</a></li>\n<li><a href=\"https://twitter.com/doubleki437461\">Twitter</a></li>\n</ul>\n"},{"title":"categories","date":"2023-10-23T06:23:16.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2023-10-23 14:23:16\ntype: \"categories\"\n---\n","updated":"2023-10-23T09:35:11.315Z","path":"categories/index.html","comments":1,"layout":"page","_id":"clo2pki6d0002xggc4lj8f5k3","content":"","site":{"data":{"head":"<!-- Google tag (gtag.js) -->\n<script async src=\"https://www.googletagmanager.com/gtag/js?id=G-VX4QKX0253\"></script>\n<script>\n  window.dataLayer = window.dataLayer || [];\n  function gtag(){dataLayer.push(arguments);}\n  gtag('js', new Date());\n\n  gtag('config', 'G-VX4QKX0253');\n</script>\n<script async src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-9876722958159423\"\n     crossorigin=\"anonymous\"></script>\n<script async src=\"https://umami.kierankihn.com/script.js\" data-website-id=\"bc1a5eef-c8f3-4836-9dc5-2f90fc23e262\"></script>","footer":"萌ICP备 <a href=\"https://icp.gov.moe/?keyword=20237857\" target=\"_blank\">20237857</a> 号"}},"excerpt":"","more":""}],"Post":[{"title":"2023-10-23 CSP 模拟赛题解","date":"2023-10-23T08:05:33.000Z","comments":1,"_content":"## A. 奶牛杀\n\n### 题面\n\n> #### 题目描述\n> \n> 贝茜和她的朋友们正在玩奶牛杀。在这款游戏中，贝茜本色出演奶牛，她的 $n$ 个朋友扮演猎人。猎人从 $1$ 到 $n$ 编号，第 $i$ 个猎人有血量 $a_i$ 和攻击力 $b_i$。且第 $i$ 个猎人瞄准 $i \\bmod n+1$ 个猎人。当第 $i$ 个猎人血量小于等于 $0$时，会立刻向第 $i\\bmod n+1$ 个猎人开枪，使之血量减少 $b_i$ 点。如果它也血量变为了小于等于 $0$ 则也会开枪，有可能造成连锁开枪。\n<!-- more -->\n\n> \n> 需要注意的是，本游戏并无缩圈环节，若第 $i \\bmod n+1$ 个猎人已经退出游戏，$i$ 号会打空而非向后寻找人开枪。\n> \n> 在奶牛杀中，没有投票环节，只有贝茜每晚上袭击一个猎人，造成 $1$ 点伤害。她现在想知道最快需要几个晚上才能杀死所有猎人？\n> \n> #### 输入格式\n> \n> 第一行一个正整数 $n$表示猎人总数。\n> \n> 接下来的 $n$行，第行包含两个正整数 $a_i,b_i$，分别表示第 $i$个猎人的血量和攻击力。\n> \n> #### 输出格式\n> \n> 输出一个正整数，表示贝茜最快需要多少个晚上获得胜利。\n> \n> #### 输入输出样例\n> \n> ##### 样例输入 #1\n> \n> 3\n> 7 15\n> 2 14\n> 5 3\n> \n> ##### 样例输出 #1\n> \n> 6\n> \n> ##### 样例解释 #1\n> \n> 最佳策略是连续 $2$  个晚上攻击猎人 $2$，其死亡时的射击导致猎人 $3$  死亡，猎人 $3$  死亡时的射击对猎人 $1$  造成\n> $3$  点伤害，接下来只需要连续 $4$  个晚上攻击猎人 $1$  即可。\n> \n> #### 数据范围与约定\n> \n> -   对于 $10\\%$ 的数据，保证 $n\\leq 10$，\n> -   对于另外 $10\\%$ 的数据，保证 $n\\leq 100$，\n> -   对于另外 $20\\%$ 的数据，保证 $n\\leq 1000$，\n> -   对于另外 $20\\%$ 的数据，保证 $b_i\\leq a_{i\\ mod\\ n+1}$，\n> -   对于 $100\\%$ 的数据，保证 $n\\leq 3*10^5,1\\leq a_i,b_i\\leq 10^{12}$。\n\n### 题意简述\n\n给定 $n$ 个人，以及其生命值 $a_i$，这 $n$ 个人之间的关系构成一个环，每个人死亡时会对下一个人造成 $b_i$ 的伤害，你可以选择任意数量的人造成任意伤害，求为了使所有人死亡你所需要造成的伤害\n\n### 思路\n\n为了方便，我们把每个人的下一个人记为 $nxt_i$，上一个人记为 $pre_i$\n\n假设我们从第 $k$ 个人开始造成伤害，那么杀掉第一个人所需要的伤害为 $a_k$，对于其余所有人，如果他的上一个人可以直接杀掉他，那么我们就不做干预，否则就另外造成伤害\n\n那么显然以第 $k$ 个人开始的所需要的伤害为：\n\n$$\n-\\max{ \\{b_{pre_k} - a_k, 0\\} } + a_k+ \\sum \\limits_{i = 1}^{n} \\max{ \\{b_{pre_i} - a_i, 0\\} }\n$$\n\n那么计算出 $sum  = \\sum \\limits_{i = 1}^{n} \\max{ \\{b_{pre_i} - a_i, 0\\} }$，枚举每个位置更新答案即可\n\n总的时间复杂度为 $O(n)$\n\n### 代码\n\n```cpp\n#include <bits/stdc++.h>\nnamespace solution\n{\n    typedef long long LL;\n    const int MAXN = 3e5 + 5;\n    const LL INF = 0x3f3f3f3f3f3f3f3fLL;\n    int n;\n    LL sum = 0;\n    LL ans = INF;\n    LL a[MAXN], b[MAXN], c[MAXN];\n    int main()\n    {\n        freopen(\"doge.in\", \"r\", stdin);\n        freopen(\"doge.out\", \"w\", stdout);\n        scanf(\"%d\", &n);\n        for (int i = 1; i <= n; i++)\n        {\n            scanf(\"%lld%lld\", &a[i], &b[i]);\n        }\n        for (int i = 1; i <= n; i++)\n        {\n            c[i % n + 1] = std::max(0LL, a[i % n + 1] - b[i]);\n            sum += c[i % n + 1];\n        }\n        for (int i = 1; i <= n; i++)\n        {\n            ans = std::min(ans, sum - c[i] + a[i]);\n        }\n        printf(\"%lld\\n\", ans);\n        return 0;\n    }\n}\nint main()\n{\n    solution::main();\n    return 0;\n}\n```\n\n## B. 备餐\n\n### 题面\n\n> #### 题目描述\n> \n> 约翰要给他的奶牛们备餐，有 $n$种食物，每种食物有满意度 $a_i$。约翰将准备食物的一个非空子序列给奶牛。\n> \n> 奶牛们对食物的要求也很高，他们要求从准备的食物中任选两个计算他们满意度的异或，如果小于他们的忍耐度 $x$就会生气。\n> \n> 约翰想问问你，在所有 $2^n-1$ 个非空子序列中，有多少种序列满足，“任选两种食物，满意度的异或和大于等于奶牛的忍耐度 $x$”？你需要输出方案数模 $998244353$ 之后的结果。\n> \n> 如果子序列只有一个元素，约翰认为一定是合法的。\n> \n> #### 输入格式\n> \n> 第一行包含两个非负整数 $n,x$ 表示食物的种类数和奶牛们的忍耐度。\n> \n> 第二行包含 $n$ 个非负整数 $a_1,a_2,...a_n$ 表示每种食物的满意度。\n> \n> #### 输出格式\n> \n> 输出一个非负整数，表示方案数模 $998244353$ 的结果。\n> \n> #### 输入输出样例\n> \n> ##### 样例输入 #1\n> \n> 3 0 0 1 2\n> \n> ##### 样例输出 #1\n> \n> 7\n> \n> ##### 样例解释 #1\n> \n> 所有的 $2^3-1$ 个非空子序列都满足条件\n> \n> ##### 样例输入 #2\n> \n> 3 2 0 1 2\n> \n> ##### 样例输出 #2\n> \n> 5\n> \n> ##### 样例解释 #2\n> \n> 由于 $0 \\bigoplus 1=1<2$，子序列 $\\{0,1\\}$ 和子序列 $\\{0, 1, 2\\}$ 不满足条件。\n> \n> ##### 样例输入 #3\n> \n> 7 4 11 5 5 8 3 1 3\n> \n> ##### 样例输出 #3\n> \n> 35\n> \n> ##### 样例解释 #3\n> \n> 不保证 $a_i$ 互不相同，选取不同的 $5$ 或 $3$，被认为是不同的方案。\n> \n> #### 数据范围与约定\n> \n> -   对于 $100\\%$  的数据，保证 $1\\leq n \\leq 3*10^5$。$0\\leq a_i,x< 2^{60}$。\n\n## C. 约翰：奶牛杀手\n\n### 题面\n\n> #### 题目描述\n> \n> 约翰最近迷恋上了《只狼：影逝二度》，于是他决定拿奶牛试试手。\n> \n> 具体来说，有 $n$个奶牛站在一个数轴上，每个奶牛有一个位置 $x_i$，还有一个警戒范围 $[l_i,r_i]$。\n> \n> 刚开始所有奶牛都是未警戒的状态。约翰可以偷袭并瞬间杀死一个未警戒状态的奶牛 $i$，但此时所有 $x_i\\in[l_j,r_j]$ 的奶牛\n> $j$ 都会进入警戒状态并前来杀死小W，即满足i的位置位于j的警戒范围内的j。其他奶牛则会保持未警戒状态。\n> \n> 约翰有一次复活机会，复活后仍然活着的奶牛会恢复到未警戒状态和原来的位置。但是如果复活后偷袭被别的奶牛再次被发现就会失败。\n> \n> 约翰有 $T$ 个农场，他想问问你能否只使用偷袭和复活来通关每张地图。进入每张地图时复活次数会重置为1。\n> \n> #### 输入格式\n> \n> 输入的第一行包含一个正整数 $T$，表示地图总数。\n> \n> 接下来连续输入 $T$ 张地图的信息。\n> \n> 每张地图的第一行包含一个正整数 $n$，表示这张地图中的奶牛总数。\n> \n> 此后的 $n$ 行，每行包含三个正整数 $x_i, l_i, r_i$，表示第 $i$ 头奶牛的位置和警戒范围。保证奶牛按照坐标严格升序给出，即 $x_1 < x_2 < ... < x_n$。\n> \n> #### 输出格式\n> \n> 输出 $T$ 行，每行包含一个字符串 `Yes` 或 `No`，分别表示约翰是否可以通过这张地图。\n> \n> #### 输入输出样例\n> \n> ##### 样例输入 #1\n> \n> 2\n> 4\n> 3 1 5\n> 6 2 10\n> 7 4 10\n> 9 8 11\n> 3\n> 1 1 3\n> 2 1 3\n> 3 1 3\n> \n> ##### 样例输出 #1\n> \n> Yes\n> No\n> \n> ##### 样例解释 #1\n> \n> 对于第一张地图，约翰可以首先对第二个奶牛（位置为 6）发动偷袭，并会被第三个奶牛杀死。在复生后，他可以按照三，一，四的顺序分别杀死剩余的三个奶牛，并且不会引起敌人的警觉。\n> 对于第二张地图，可以发现无论如何安排顺序，约翰都被顺序中最后 的那个敌人杀死两次，用完所有的复生机会。\n> \n> \n> #### 数据范围与约定\n> 对于 $100\\%$ 的数据，保证 $1\\leq T\\leq 10^5,1\\leq n \\leq 10^6,\\sum n\\leq 3*10^6,1\\leq l_i\\leq x_i\\leq r_i\\leq 10^9,1\\leq x_1<x_2<...<x_n\\leq 10^9$。\n\n\n### 题意简述\n\n给定 $n$ 个区间，每个区间包含三个信息：$x_i, l_i, r_i$，求判断能否在删除某个区间之后，可以通过每次选择一个“ $x_i$ 不属于任何其他未删除的区间的 $l_j, r_j$ 的区间”删除掉，使得所有区间最后都被删除\n\n\n### 暴力做法\n\n简化题意，可以通过相互包含的关系建出一张有向图，图上有环时则无法处理，只能将某个区间删除掉\n\n\n那么可以通过枚举环上的点删除，拓扑排序判断图中是否还有其他环的方法来解决，时间复杂度为 $O(n ^ 3)$\n\n\n可以发现如下性质：图中如果存在环，那么必定存在二元环，\n\n\n以三元环为例，假设图中有三元环 $a, b, c$，不妨设 $x_a < x_b < x_c$，显然 $b$ 可以在 $a$ 的区间内，$c$ 可以在 $b$ 的区间内，又因为构成环，那么 $a$ 或 $b$ 必定有一个在 $c$ 的区间内，显然无论哪种情况，图中都有二元环，故命题得证\n\n\n那么现在的问题就变成了在图中找二元环的问题\n\n\n首先可以在图中找出任意一对二元环，对环上的两个点枚举删除，判断图中是否还有其他二元环\n\n\n判断二元环时可以从左向右枚举每个点，同时维护一个栈，栈中的元素从栈底到栈顶 $x$ 递增，$r$ 递减，$x$ 递增保证了栈中元素最可能被包含在其他区间中，$r$ 递减保证了区间中的元素最可能包含其他元素，那么对于每个当前枚举到的元素 $i$，一直弹出栈中元素，直到栈中元素的 $r$ 大于 $i$ 的 $r$ 为止，对于弹出的每个元素以及最后的栈顶，判断其与 $i$ 是否构成二元环，如果枚举完了都没有找到，说明图中不存在二元环 ，也就说明原图为有向无环图\n\n\n下面考虑证明正确性\n\n\n假设图中存在二元环 $a, b$，不妨设 $a_x < b_x$，那么一定有 $a_l \\le b_x \\le a_r$，分两以下几种情况讨论：\n\n\n- 枚举到 $b$ 时 $a$ 未被弹出栈， 此时要么枚举到 $b$ 时与 $a$ 进行判断，发现 $a, b$ 的环，要么枚举到后边某个位置 $c$ 时，发现一个更大的环\n- 枚举到 $b$ 时 $a$ 已经出栈，说明在前边某个位置 $c$，$a$ 已经和 $c$ 构成环\n\n\n故若图中有环，那么该算法一定可以找到\n\n\n### 代码\n\n```cpp\n#include <bits/stdc++.h>\nnamespace solution\n{\n    typedef long long LL;\n    const int MAXN = 3e6 + 5;\n    int t;\n    LL n;\n    LL a[MAXN];\n    struct Node\n    {\n        LL l, x, r;\n    };\n    Node node[MAXN];\n    auto find(int pos)\n    {\n        std::stack<int> stk;\n        for (int i = 1; i <= n; i++)\n        {\n            if (i == pos)\n            {\n                continue;\n            }\n            while (!stk.empty())\n            {\n                int u = stk.top();\n                if (node[i].l <= node[u].x && node[u].x <= node[i].r && node[u].l <= node[i].x && node[i].x <= node[u].r)\n                {\n                    return std::make_pair(i, u);\n                }\n                if (node[u].r > node[i].r)\n                {\n                    break;\n                }\n                stk.pop();\n            }\n            stk.push(i);\n        }\n        return std::make_pair(0, 0);\n    }\n    int main()\n    {\n        freopen(\"sekiro.in\", \"r\", stdin);\n        freopen(\"sekiro.out\", \"w\", stdout);\n        scanf(\"%d\", &t);\n        while (t--)\n        {\n            scanf(\"%lld\", &n);\n            for (int i = 1; i <= n; i++)\n            {\n                scanf(\"%lld%lld%lld\", &node[i].x, &node[i].l, &node[i].r);\n            }\n            auto t = find(0);\n            if (t == std::make_pair(0, 0) || find(t.first) == std::make_pair(0, 0) || find(t.second) == std::make_pair(0, 0))\n            {\n                puts(\"Yes\");\n            }\n            else\n            {\n                puts(\"No\");\n            }\n        }\n        return 0;\n    }\n}\nint main()\n{\n    solution::main();\n    return 0;\n}\n```","source":"_posts/2023-10-23-csp-模拟赛题解.md","raw":"---\ntitle: 2023-10-23 CSP 模拟赛题解\ndate: 2023-10-23 16:05:33\ntags:\n  - 贪心\n  - Trie\n  - 动态规划\n  - 数学\n  - 图论\n  - 树\n  - 线段树\n  - 扫描线\ncategories:\n  - 解题报告\ncomments: true\n---\n## A. 奶牛杀\n\n### 题面\n\n> #### 题目描述\n> \n> 贝茜和她的朋友们正在玩奶牛杀。在这款游戏中，贝茜本色出演奶牛，她的 $n$ 个朋友扮演猎人。猎人从 $1$ 到 $n$ 编号，第 $i$ 个猎人有血量 $a_i$ 和攻击力 $b_i$。且第 $i$ 个猎人瞄准 $i \\bmod n+1$ 个猎人。当第 $i$ 个猎人血量小于等于 $0$时，会立刻向第 $i\\bmod n+1$ 个猎人开枪，使之血量减少 $b_i$ 点。如果它也血量变为了小于等于 $0$ 则也会开枪，有可能造成连锁开枪。\n<!-- more -->\n\n> \n> 需要注意的是，本游戏并无缩圈环节，若第 $i \\bmod n+1$ 个猎人已经退出游戏，$i$ 号会打空而非向后寻找人开枪。\n> \n> 在奶牛杀中，没有投票环节，只有贝茜每晚上袭击一个猎人，造成 $1$ 点伤害。她现在想知道最快需要几个晚上才能杀死所有猎人？\n> \n> #### 输入格式\n> \n> 第一行一个正整数 $n$表示猎人总数。\n> \n> 接下来的 $n$行，第行包含两个正整数 $a_i,b_i$，分别表示第 $i$个猎人的血量和攻击力。\n> \n> #### 输出格式\n> \n> 输出一个正整数，表示贝茜最快需要多少个晚上获得胜利。\n> \n> #### 输入输出样例\n> \n> ##### 样例输入 #1\n> \n> 3\n> 7 15\n> 2 14\n> 5 3\n> \n> ##### 样例输出 #1\n> \n> 6\n> \n> ##### 样例解释 #1\n> \n> 最佳策略是连续 $2$  个晚上攻击猎人 $2$，其死亡时的射击导致猎人 $3$  死亡，猎人 $3$  死亡时的射击对猎人 $1$  造成\n> $3$  点伤害，接下来只需要连续 $4$  个晚上攻击猎人 $1$  即可。\n> \n> #### 数据范围与约定\n> \n> -   对于 $10\\%$ 的数据，保证 $n\\leq 10$，\n> -   对于另外 $10\\%$ 的数据，保证 $n\\leq 100$，\n> -   对于另外 $20\\%$ 的数据，保证 $n\\leq 1000$，\n> -   对于另外 $20\\%$ 的数据，保证 $b_i\\leq a_{i\\ mod\\ n+1}$，\n> -   对于 $100\\%$ 的数据，保证 $n\\leq 3*10^5,1\\leq a_i,b_i\\leq 10^{12}$。\n\n### 题意简述\n\n给定 $n$ 个人，以及其生命值 $a_i$，这 $n$ 个人之间的关系构成一个环，每个人死亡时会对下一个人造成 $b_i$ 的伤害，你可以选择任意数量的人造成任意伤害，求为了使所有人死亡你所需要造成的伤害\n\n### 思路\n\n为了方便，我们把每个人的下一个人记为 $nxt_i$，上一个人记为 $pre_i$\n\n假设我们从第 $k$ 个人开始造成伤害，那么杀掉第一个人所需要的伤害为 $a_k$，对于其余所有人，如果他的上一个人可以直接杀掉他，那么我们就不做干预，否则就另外造成伤害\n\n那么显然以第 $k$ 个人开始的所需要的伤害为：\n\n$$\n-\\max{ \\{b_{pre_k} - a_k, 0\\} } + a_k+ \\sum \\limits_{i = 1}^{n} \\max{ \\{b_{pre_i} - a_i, 0\\} }\n$$\n\n那么计算出 $sum  = \\sum \\limits_{i = 1}^{n} \\max{ \\{b_{pre_i} - a_i, 0\\} }$，枚举每个位置更新答案即可\n\n总的时间复杂度为 $O(n)$\n\n### 代码\n\n```cpp\n#include <bits/stdc++.h>\nnamespace solution\n{\n    typedef long long LL;\n    const int MAXN = 3e5 + 5;\n    const LL INF = 0x3f3f3f3f3f3f3f3fLL;\n    int n;\n    LL sum = 0;\n    LL ans = INF;\n    LL a[MAXN], b[MAXN], c[MAXN];\n    int main()\n    {\n        freopen(\"doge.in\", \"r\", stdin);\n        freopen(\"doge.out\", \"w\", stdout);\n        scanf(\"%d\", &n);\n        for (int i = 1; i <= n; i++)\n        {\n            scanf(\"%lld%lld\", &a[i], &b[i]);\n        }\n        for (int i = 1; i <= n; i++)\n        {\n            c[i % n + 1] = std::max(0LL, a[i % n + 1] - b[i]);\n            sum += c[i % n + 1];\n        }\n        for (int i = 1; i <= n; i++)\n        {\n            ans = std::min(ans, sum - c[i] + a[i]);\n        }\n        printf(\"%lld\\n\", ans);\n        return 0;\n    }\n}\nint main()\n{\n    solution::main();\n    return 0;\n}\n```\n\n## B. 备餐\n\n### 题面\n\n> #### 题目描述\n> \n> 约翰要给他的奶牛们备餐，有 $n$种食物，每种食物有满意度 $a_i$。约翰将准备食物的一个非空子序列给奶牛。\n> \n> 奶牛们对食物的要求也很高，他们要求从准备的食物中任选两个计算他们满意度的异或，如果小于他们的忍耐度 $x$就会生气。\n> \n> 约翰想问问你，在所有 $2^n-1$ 个非空子序列中，有多少种序列满足，“任选两种食物，满意度的异或和大于等于奶牛的忍耐度 $x$”？你需要输出方案数模 $998244353$ 之后的结果。\n> \n> 如果子序列只有一个元素，约翰认为一定是合法的。\n> \n> #### 输入格式\n> \n> 第一行包含两个非负整数 $n,x$ 表示食物的种类数和奶牛们的忍耐度。\n> \n> 第二行包含 $n$ 个非负整数 $a_1,a_2,...a_n$ 表示每种食物的满意度。\n> \n> #### 输出格式\n> \n> 输出一个非负整数，表示方案数模 $998244353$ 的结果。\n> \n> #### 输入输出样例\n> \n> ##### 样例输入 #1\n> \n> 3 0 0 1 2\n> \n> ##### 样例输出 #1\n> \n> 7\n> \n> ##### 样例解释 #1\n> \n> 所有的 $2^3-1$ 个非空子序列都满足条件\n> \n> ##### 样例输入 #2\n> \n> 3 2 0 1 2\n> \n> ##### 样例输出 #2\n> \n> 5\n> \n> ##### 样例解释 #2\n> \n> 由于 $0 \\bigoplus 1=1<2$，子序列 $\\{0,1\\}$ 和子序列 $\\{0, 1, 2\\}$ 不满足条件。\n> \n> ##### 样例输入 #3\n> \n> 7 4 11 5 5 8 3 1 3\n> \n> ##### 样例输出 #3\n> \n> 35\n> \n> ##### 样例解释 #3\n> \n> 不保证 $a_i$ 互不相同，选取不同的 $5$ 或 $3$，被认为是不同的方案。\n> \n> #### 数据范围与约定\n> \n> -   对于 $100\\%$  的数据，保证 $1\\leq n \\leq 3*10^5$。$0\\leq a_i,x< 2^{60}$。\n\n## C. 约翰：奶牛杀手\n\n### 题面\n\n> #### 题目描述\n> \n> 约翰最近迷恋上了《只狼：影逝二度》，于是他决定拿奶牛试试手。\n> \n> 具体来说，有 $n$个奶牛站在一个数轴上，每个奶牛有一个位置 $x_i$，还有一个警戒范围 $[l_i,r_i]$。\n> \n> 刚开始所有奶牛都是未警戒的状态。约翰可以偷袭并瞬间杀死一个未警戒状态的奶牛 $i$，但此时所有 $x_i\\in[l_j,r_j]$ 的奶牛\n> $j$ 都会进入警戒状态并前来杀死小W，即满足i的位置位于j的警戒范围内的j。其他奶牛则会保持未警戒状态。\n> \n> 约翰有一次复活机会，复活后仍然活着的奶牛会恢复到未警戒状态和原来的位置。但是如果复活后偷袭被别的奶牛再次被发现就会失败。\n> \n> 约翰有 $T$ 个农场，他想问问你能否只使用偷袭和复活来通关每张地图。进入每张地图时复活次数会重置为1。\n> \n> #### 输入格式\n> \n> 输入的第一行包含一个正整数 $T$，表示地图总数。\n> \n> 接下来连续输入 $T$ 张地图的信息。\n> \n> 每张地图的第一行包含一个正整数 $n$，表示这张地图中的奶牛总数。\n> \n> 此后的 $n$ 行，每行包含三个正整数 $x_i, l_i, r_i$，表示第 $i$ 头奶牛的位置和警戒范围。保证奶牛按照坐标严格升序给出，即 $x_1 < x_2 < ... < x_n$。\n> \n> #### 输出格式\n> \n> 输出 $T$ 行，每行包含一个字符串 `Yes` 或 `No`，分别表示约翰是否可以通过这张地图。\n> \n> #### 输入输出样例\n> \n> ##### 样例输入 #1\n> \n> 2\n> 4\n> 3 1 5\n> 6 2 10\n> 7 4 10\n> 9 8 11\n> 3\n> 1 1 3\n> 2 1 3\n> 3 1 3\n> \n> ##### 样例输出 #1\n> \n> Yes\n> No\n> \n> ##### 样例解释 #1\n> \n> 对于第一张地图，约翰可以首先对第二个奶牛（位置为 6）发动偷袭，并会被第三个奶牛杀死。在复生后，他可以按照三，一，四的顺序分别杀死剩余的三个奶牛，并且不会引起敌人的警觉。\n> 对于第二张地图，可以发现无论如何安排顺序，约翰都被顺序中最后 的那个敌人杀死两次，用完所有的复生机会。\n> \n> \n> #### 数据范围与约定\n> 对于 $100\\%$ 的数据，保证 $1\\leq T\\leq 10^5,1\\leq n \\leq 10^6,\\sum n\\leq 3*10^6,1\\leq l_i\\leq x_i\\leq r_i\\leq 10^9,1\\leq x_1<x_2<...<x_n\\leq 10^9$。\n\n\n### 题意简述\n\n给定 $n$ 个区间，每个区间包含三个信息：$x_i, l_i, r_i$，求判断能否在删除某个区间之后，可以通过每次选择一个“ $x_i$ 不属于任何其他未删除的区间的 $l_j, r_j$ 的区间”删除掉，使得所有区间最后都被删除\n\n\n### 暴力做法\n\n简化题意，可以通过相互包含的关系建出一张有向图，图上有环时则无法处理，只能将某个区间删除掉\n\n\n那么可以通过枚举环上的点删除，拓扑排序判断图中是否还有其他环的方法来解决，时间复杂度为 $O(n ^ 3)$\n\n\n可以发现如下性质：图中如果存在环，那么必定存在二元环，\n\n\n以三元环为例，假设图中有三元环 $a, b, c$，不妨设 $x_a < x_b < x_c$，显然 $b$ 可以在 $a$ 的区间内，$c$ 可以在 $b$ 的区间内，又因为构成环，那么 $a$ 或 $b$ 必定有一个在 $c$ 的区间内，显然无论哪种情况，图中都有二元环，故命题得证\n\n\n那么现在的问题就变成了在图中找二元环的问题\n\n\n首先可以在图中找出任意一对二元环，对环上的两个点枚举删除，判断图中是否还有其他二元环\n\n\n判断二元环时可以从左向右枚举每个点，同时维护一个栈，栈中的元素从栈底到栈顶 $x$ 递增，$r$ 递减，$x$ 递增保证了栈中元素最可能被包含在其他区间中，$r$ 递减保证了区间中的元素最可能包含其他元素，那么对于每个当前枚举到的元素 $i$，一直弹出栈中元素，直到栈中元素的 $r$ 大于 $i$ 的 $r$ 为止，对于弹出的每个元素以及最后的栈顶，判断其与 $i$ 是否构成二元环，如果枚举完了都没有找到，说明图中不存在二元环 ，也就说明原图为有向无环图\n\n\n下面考虑证明正确性\n\n\n假设图中存在二元环 $a, b$，不妨设 $a_x < b_x$，那么一定有 $a_l \\le b_x \\le a_r$，分两以下几种情况讨论：\n\n\n- 枚举到 $b$ 时 $a$ 未被弹出栈， 此时要么枚举到 $b$ 时与 $a$ 进行判断，发现 $a, b$ 的环，要么枚举到后边某个位置 $c$ 时，发现一个更大的环\n- 枚举到 $b$ 时 $a$ 已经出栈，说明在前边某个位置 $c$，$a$ 已经和 $c$ 构成环\n\n\n故若图中有环，那么该算法一定可以找到\n\n\n### 代码\n\n```cpp\n#include <bits/stdc++.h>\nnamespace solution\n{\n    typedef long long LL;\n    const int MAXN = 3e6 + 5;\n    int t;\n    LL n;\n    LL a[MAXN];\n    struct Node\n    {\n        LL l, x, r;\n    };\n    Node node[MAXN];\n    auto find(int pos)\n    {\n        std::stack<int> stk;\n        for (int i = 1; i <= n; i++)\n        {\n            if (i == pos)\n            {\n                continue;\n            }\n            while (!stk.empty())\n            {\n                int u = stk.top();\n                if (node[i].l <= node[u].x && node[u].x <= node[i].r && node[u].l <= node[i].x && node[i].x <= node[u].r)\n                {\n                    return std::make_pair(i, u);\n                }\n                if (node[u].r > node[i].r)\n                {\n                    break;\n                }\n                stk.pop();\n            }\n            stk.push(i);\n        }\n        return std::make_pair(0, 0);\n    }\n    int main()\n    {\n        freopen(\"sekiro.in\", \"r\", stdin);\n        freopen(\"sekiro.out\", \"w\", stdout);\n        scanf(\"%d\", &t);\n        while (t--)\n        {\n            scanf(\"%lld\", &n);\n            for (int i = 1; i <= n; i++)\n            {\n                scanf(\"%lld%lld%lld\", &node[i].x, &node[i].l, &node[i].r);\n            }\n            auto t = find(0);\n            if (t == std::make_pair(0, 0) || find(t.first) == std::make_pair(0, 0) || find(t.second) == std::make_pair(0, 0))\n            {\n                puts(\"Yes\");\n            }\n            else\n            {\n                puts(\"No\");\n            }\n        }\n        return 0;\n    }\n}\nint main()\n{\n    solution::main();\n    return 0;\n}\n```","slug":"2023-10-23-csp-模拟赛题解","published":1,"updated":"2023-10-23T09:35:11.315Z","layout":"post","photos":[],"link":"","_id":"clo2pki6f0003xggc78f7fba7","content":"<h2 id=\"A-奶牛杀\"><a href=\"#A-奶牛杀\" class=\"headerlink\" title=\"A. 奶牛杀\"></a>A. 奶牛杀</h2><h3 id=\"题面\"><a href=\"#题面\" class=\"headerlink\" title=\"题面\"></a>题面</h3><blockquote>\n<h4 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h4><p>贝茜和她的朋友们正在玩奶牛杀。在这款游戏中，贝茜本色出演奶牛，她的 $n$ 个朋友扮演猎人。猎人从 $1$ 到 $n$ 编号，第 $i$ 个猎人有血量 $a_i$ 和攻击力 $b_i$。且第 $i$ 个猎人瞄准 $i \\bmod n+1$ 个猎人。当第 $i$ 个猎人血量小于等于 $0$时，会立刻向第 $i\\bmod n+1$ 个猎人开枪，使之血量减少 $b_i$ 点。如果它也血量变为了小于等于 $0$ 则也会开枪，有可能造成连锁开枪。</p>\n</blockquote>\n<span id=\"more\"></span>\n\n<blockquote>\n<p>需要注意的是，本游戏并无缩圈环节，若第 $i \\bmod n+1$ 个猎人已经退出游戏，$i$ 号会打空而非向后寻找人开枪。</p>\n<p>在奶牛杀中，没有投票环节，只有贝茜每晚上袭击一个猎人，造成 $1$ 点伤害。她现在想知道最快需要几个晚上才能杀死所有猎人？</p>\n<h4 id=\"输入格式\"><a href=\"#输入格式\" class=\"headerlink\" title=\"输入格式\"></a>输入格式</h4><p>第一行一个正整数 $n$表示猎人总数。</p>\n<p>接下来的 $n$行，第行包含两个正整数 $a_i,b_i$，分别表示第 $i$个猎人的血量和攻击力。</p>\n<h4 id=\"输出格式\"><a href=\"#输出格式\" class=\"headerlink\" title=\"输出格式\"></a>输出格式</h4><p>输出一个正整数，表示贝茜最快需要多少个晚上获得胜利。</p>\n<h4 id=\"输入输出样例\"><a href=\"#输入输出样例\" class=\"headerlink\" title=\"输入输出样例\"></a>输入输出样例</h4><h5 id=\"样例输入-1\"><a href=\"#样例输入-1\" class=\"headerlink\" title=\"样例输入 #1\"></a>样例输入 #1</h5><p>3<br>7 15<br>2 14<br>5 3</p>\n<h5 id=\"样例输出-1\"><a href=\"#样例输出-1\" class=\"headerlink\" title=\"样例输出 #1\"></a>样例输出 #1</h5><p>6</p>\n<h5 id=\"样例解释-1\"><a href=\"#样例解释-1\" class=\"headerlink\" title=\"样例解释 #1\"></a>样例解释 #1</h5><p>最佳策略是连续 $2$  个晚上攻击猎人 $2$，其死亡时的射击导致猎人 $3$  死亡，猎人 $3$  死亡时的射击对猎人 $1$  造成<br>$3$  点伤害，接下来只需要连续 $4$  个晚上攻击猎人 $1$  即可。</p>\n<h4 id=\"数据范围与约定\"><a href=\"#数据范围与约定\" class=\"headerlink\" title=\"数据范围与约定\"></a>数据范围与约定</h4><ul>\n<li>对于 $10%$ 的数据，保证 $n\\leq 10$，</li>\n<li>对于另外 $10%$ 的数据，保证 $n\\leq 100$，</li>\n<li>对于另外 $20%$ 的数据，保证 $n\\leq 1000$，</li>\n<li>对于另外 $20%$ 的数据，保证 $b_i\\leq a_{i\\ mod\\ n+1}$，</li>\n<li>对于 $100%$ 的数据，保证 $n\\leq 3*10^5,1\\leq a_i,b_i\\leq 10^{12}$。</li>\n</ul>\n</blockquote>\n<h3 id=\"题意简述\"><a href=\"#题意简述\" class=\"headerlink\" title=\"题意简述\"></a>题意简述</h3><p>给定 $n$ 个人，以及其生命值 $a_i$，这 $n$ 个人之间的关系构成一个环，每个人死亡时会对下一个人造成 $b_i$ 的伤害，你可以选择任意数量的人造成任意伤害，求为了使所有人死亡你所需要造成的伤害</p>\n<h3 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h3><p>为了方便，我们把每个人的下一个人记为 $nxt_i$，上一个人记为 $pre_i$</p>\n<p>假设我们从第 $k$ 个人开始造成伤害，那么杀掉第一个人所需要的伤害为 $a_k$，对于其余所有人，如果他的上一个人可以直接杀掉他，那么我们就不做干预，否则就另外造成伤害</p>\n<p>那么显然以第 $k$ 个人开始的所需要的伤害为：</p>\n<p>$$<br>-\\max{ {b_{pre_k} - a_k, 0} } + a_k+ \\sum \\limits_{i &#x3D; 1}^{n} \\max{ {b_{pre_i} - a_i, 0} }<br>$$</p>\n<p>那么计算出 $sum  &#x3D; \\sum \\limits_{i &#x3D; 1}^{n} \\max{ {b_{pre_i} - a_i, 0} }$，枚举每个位置更新答案即可</p>\n<p>总的时间复杂度为 $O(n)$</p>\n<h3 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> solution</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">typedef</span> <span class=\"type\">long</span> <span class=\"type\">long</span> LL;</span><br><span class=\"line\">    <span class=\"type\">const</span> <span class=\"type\">int</span> MAXN = <span class=\"number\">3e5</span> + <span class=\"number\">5</span>;</span><br><span class=\"line\">    <span class=\"type\">const</span> LL INF = <span class=\"number\">0x3f3f3f3f3f3f3f3f</span>LL;</span><br><span class=\"line\">    <span class=\"type\">int</span> n;</span><br><span class=\"line\">    LL sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">    LL ans = INF;</span><br><span class=\"line\">    LL a[MAXN], b[MAXN], c[MAXN];</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">freopen</span>(<span class=\"string\">&quot;doge.in&quot;</span>, <span class=\"string\">&quot;r&quot;</span>, stdin);</span><br><span class=\"line\">        <span class=\"built_in\">freopen</span>(<span class=\"string\">&quot;doge.out&quot;</span>, <span class=\"string\">&quot;w&quot;</span>, stdout);</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>, &amp;n);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%lld%lld&quot;</span>, &amp;a[i], &amp;b[i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            c[i % n + <span class=\"number\">1</span>] = std::<span class=\"built_in\">max</span>(<span class=\"number\">0LL</span>, a[i % n + <span class=\"number\">1</span>] - b[i]);</span><br><span class=\"line\">            sum += c[i % n + <span class=\"number\">1</span>];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            ans = std::<span class=\"built_in\">min</span>(ans, sum - c[i] + a[i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%lld\\n&quot;</span>, ans);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    solution::<span class=\"built_in\">main</span>();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"B-备餐\"><a href=\"#B-备餐\" class=\"headerlink\" title=\"B. 备餐\"></a>B. 备餐</h2><h3 id=\"题面-1\"><a href=\"#题面-1\" class=\"headerlink\" title=\"题面\"></a>题面</h3><blockquote>\n<h4 id=\"题目描述-1\"><a href=\"#题目描述-1\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h4><p>约翰要给他的奶牛们备餐，有 $n$种食物，每种食物有满意度 $a_i$。约翰将准备食物的一个非空子序列给奶牛。</p>\n<p>奶牛们对食物的要求也很高，他们要求从准备的食物中任选两个计算他们满意度的异或，如果小于他们的忍耐度 $x$就会生气。</p>\n<p>约翰想问问你，在所有 $2^n-1$ 个非空子序列中，有多少种序列满足，“任选两种食物，满意度的异或和大于等于奶牛的忍耐度 $x$”？你需要输出方案数模 $998244353$ 之后的结果。</p>\n<p>如果子序列只有一个元素，约翰认为一定是合法的。</p>\n<h4 id=\"输入格式-1\"><a href=\"#输入格式-1\" class=\"headerlink\" title=\"输入格式\"></a>输入格式</h4><p>第一行包含两个非负整数 $n,x$ 表示食物的种类数和奶牛们的忍耐度。</p>\n<p>第二行包含 $n$ 个非负整数 $a_1,a_2,…a_n$ 表示每种食物的满意度。</p>\n<h4 id=\"输出格式-1\"><a href=\"#输出格式-1\" class=\"headerlink\" title=\"输出格式\"></a>输出格式</h4><p>输出一个非负整数，表示方案数模 $998244353$ 的结果。</p>\n<h4 id=\"输入输出样例-1\"><a href=\"#输入输出样例-1\" class=\"headerlink\" title=\"输入输出样例\"></a>输入输出样例</h4><h5 id=\"样例输入-1-1\"><a href=\"#样例输入-1-1\" class=\"headerlink\" title=\"样例输入 #1\"></a>样例输入 #1</h5><p>3 0 0 1 2</p>\n<h5 id=\"样例输出-1-1\"><a href=\"#样例输出-1-1\" class=\"headerlink\" title=\"样例输出 #1\"></a>样例输出 #1</h5><p>7</p>\n<h5 id=\"样例解释-1-1\"><a href=\"#样例解释-1-1\" class=\"headerlink\" title=\"样例解释 #1\"></a>样例解释 #1</h5><p>所有的 $2^3-1$ 个非空子序列都满足条件</p>\n<h5 id=\"样例输入-2\"><a href=\"#样例输入-2\" class=\"headerlink\" title=\"样例输入 #2\"></a>样例输入 #2</h5><p>3 2 0 1 2</p>\n<h5 id=\"样例输出-2\"><a href=\"#样例输出-2\" class=\"headerlink\" title=\"样例输出 #2\"></a>样例输出 #2</h5><p>5</p>\n<h5 id=\"样例解释-2\"><a href=\"#样例解释-2\" class=\"headerlink\" title=\"样例解释 #2\"></a>样例解释 #2</h5><p>由于 $0 \\bigoplus 1&#x3D;1&lt;2$，子序列 ${0,1}$ 和子序列 ${0, 1, 2}$ 不满足条件。</p>\n<h5 id=\"样例输入-3\"><a href=\"#样例输入-3\" class=\"headerlink\" title=\"样例输入 #3\"></a>样例输入 #3</h5><p>7 4 11 5 5 8 3 1 3</p>\n<h5 id=\"样例输出-3\"><a href=\"#样例输出-3\" class=\"headerlink\" title=\"样例输出 #3\"></a>样例输出 #3</h5><p>35</p>\n<h5 id=\"样例解释-3\"><a href=\"#样例解释-3\" class=\"headerlink\" title=\"样例解释 #3\"></a>样例解释 #3</h5><p>不保证 $a_i$ 互不相同，选取不同的 $5$ 或 $3$，被认为是不同的方案。</p>\n<h4 id=\"数据范围与约定-1\"><a href=\"#数据范围与约定-1\" class=\"headerlink\" title=\"数据范围与约定\"></a>数据范围与约定</h4><ul>\n<li>对于 $100%$  的数据，保证 $1\\leq n \\leq 3*10^5$。$0\\leq a_i,x&lt; 2^{60}$。</li>\n</ul>\n</blockquote>\n<h2 id=\"C-约翰：奶牛杀手\"><a href=\"#C-约翰：奶牛杀手\" class=\"headerlink\" title=\"C. 约翰：奶牛杀手\"></a>C. 约翰：奶牛杀手</h2><h3 id=\"题面-2\"><a href=\"#题面-2\" class=\"headerlink\" title=\"题面\"></a>题面</h3><blockquote>\n<h4 id=\"题目描述-2\"><a href=\"#题目描述-2\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h4><p>约翰最近迷恋上了《只狼：影逝二度》，于是他决定拿奶牛试试手。</p>\n<p>具体来说，有 $n$个奶牛站在一个数轴上，每个奶牛有一个位置 $x_i$，还有一个警戒范围 $[l_i,r_i]$。</p>\n<p>刚开始所有奶牛都是未警戒的状态。约翰可以偷袭并瞬间杀死一个未警戒状态的奶牛 $i$，但此时所有 $x_i\\in[l_j,r_j]$ 的奶牛<br>$j$ 都会进入警戒状态并前来杀死小W，即满足i的位置位于j的警戒范围内的j。其他奶牛则会保持未警戒状态。</p>\n<p>约翰有一次复活机会，复活后仍然活着的奶牛会恢复到未警戒状态和原来的位置。但是如果复活后偷袭被别的奶牛再次被发现就会失败。</p>\n<p>约翰有 $T$ 个农场，他想问问你能否只使用偷袭和复活来通关每张地图。进入每张地图时复活次数会重置为1。</p>\n<h4 id=\"输入格式-2\"><a href=\"#输入格式-2\" class=\"headerlink\" title=\"输入格式\"></a>输入格式</h4><p>输入的第一行包含一个正整数 $T$，表示地图总数。</p>\n<p>接下来连续输入 $T$ 张地图的信息。</p>\n<p>每张地图的第一行包含一个正整数 $n$，表示这张地图中的奶牛总数。</p>\n<p>此后的 $n$ 行，每行包含三个正整数 $x_i, l_i, r_i$，表示第 $i$ 头奶牛的位置和警戒范围。保证奶牛按照坐标严格升序给出，即 $x_1 &lt; x_2 &lt; … &lt; x_n$。</p>\n<h4 id=\"输出格式-2\"><a href=\"#输出格式-2\" class=\"headerlink\" title=\"输出格式\"></a>输出格式</h4><p>输出 $T$ 行，每行包含一个字符串 <code>Yes</code> 或 <code>No</code>，分别表示约翰是否可以通过这张地图。</p>\n<h4 id=\"输入输出样例-2\"><a href=\"#输入输出样例-2\" class=\"headerlink\" title=\"输入输出样例\"></a>输入输出样例</h4><h5 id=\"样例输入-1-2\"><a href=\"#样例输入-1-2\" class=\"headerlink\" title=\"样例输入 #1\"></a>样例输入 #1</h5><p>2<br>4<br>3 1 5<br>6 2 10<br>7 4 10<br>9 8 11<br>3<br>1 1 3<br>2 1 3<br>3 1 3</p>\n<h5 id=\"样例输出-1-2\"><a href=\"#样例输出-1-2\" class=\"headerlink\" title=\"样例输出 #1\"></a>样例输出 #1</h5><p>Yes<br>No</p>\n<h5 id=\"样例解释-1-2\"><a href=\"#样例解释-1-2\" class=\"headerlink\" title=\"样例解释 #1\"></a>样例解释 #1</h5><p>对于第一张地图，约翰可以首先对第二个奶牛（位置为 6）发动偷袭，并会被第三个奶牛杀死。在复生后，他可以按照三，一，四的顺序分别杀死剩余的三个奶牛，并且不会引起敌人的警觉。<br>对于第二张地图，可以发现无论如何安排顺序，约翰都被顺序中最后 的那个敌人杀死两次，用完所有的复生机会。</p>\n<h4 id=\"数据范围与约定-2\"><a href=\"#数据范围与约定-2\" class=\"headerlink\" title=\"数据范围与约定\"></a>数据范围与约定</h4><p>对于 $100%$ 的数据，保证 $1\\leq T\\leq 10^5,1\\leq n \\leq 10^6,\\sum n\\leq 3*10^6,1\\leq l_i\\leq x_i\\leq r_i\\leq 10^9,1\\leq x_1&lt;x_2&lt;…&lt;x_n\\leq 10^9$。</p>\n</blockquote>\n<h3 id=\"题意简述-1\"><a href=\"#题意简述-1\" class=\"headerlink\" title=\"题意简述\"></a>题意简述</h3><p>给定 $n$ 个区间，每个区间包含三个信息：$x_i, l_i, r_i$，求判断能否在删除某个区间之后，可以通过每次选择一个“ $x_i$ 不属于任何其他未删除的区间的 $l_j, r_j$ 的区间”删除掉，使得所有区间最后都被删除</p>\n<h3 id=\"暴力做法\"><a href=\"#暴力做法\" class=\"headerlink\" title=\"暴力做法\"></a>暴力做法</h3><p>简化题意，可以通过相互包含的关系建出一张有向图，图上有环时则无法处理，只能将某个区间删除掉</p>\n<p>那么可以通过枚举环上的点删除，拓扑排序判断图中是否还有其他环的方法来解决，时间复杂度为 $O(n ^ 3)$</p>\n<p>可以发现如下性质：图中如果存在环，那么必定存在二元环，</p>\n<p>以三元环为例，假设图中有三元环 $a, b, c$，不妨设 $x_a &lt; x_b &lt; x_c$，显然 $b$ 可以在 $a$ 的区间内，$c$ 可以在 $b$ 的区间内，又因为构成环，那么 $a$ 或 $b$ 必定有一个在 $c$ 的区间内，显然无论哪种情况，图中都有二元环，故命题得证</p>\n<p>那么现在的问题就变成了在图中找二元环的问题</p>\n<p>首先可以在图中找出任意一对二元环，对环上的两个点枚举删除，判断图中是否还有其他二元环</p>\n<p>判断二元环时可以从左向右枚举每个点，同时维护一个栈，栈中的元素从栈底到栈顶 $x$ 递增，$r$ 递减，$x$ 递增保证了栈中元素最可能被包含在其他区间中，$r$ 递减保证了区间中的元素最可能包含其他元素，那么对于每个当前枚举到的元素 $i$，一直弹出栈中元素，直到栈中元素的 $r$ 大于 $i$ 的 $r$ 为止，对于弹出的每个元素以及最后的栈顶，判断其与 $i$ 是否构成二元环，如果枚举完了都没有找到，说明图中不存在二元环 ，也就说明原图为有向无环图</p>\n<p>下面考虑证明正确性</p>\n<p>假设图中存在二元环 $a, b$，不妨设 $a_x &lt; b_x$，那么一定有 $a_l \\le b_x \\le a_r$，分两以下几种情况讨论：</p>\n<ul>\n<li>枚举到 $b$ 时 $a$ 未被弹出栈， 此时要么枚举到 $b$ 时与 $a$ 进行判断，发现 $a, b$ 的环，要么枚举到后边某个位置 $c$ 时，发现一个更大的环</li>\n<li>枚举到 $b$ 时 $a$ 已经出栈，说明在前边某个位置 $c$，$a$ 已经和 $c$ 构成环</li>\n</ul>\n<p>故若图中有环，那么该算法一定可以找到</p>\n<h3 id=\"代码-1\"><a href=\"#代码-1\" class=\"headerlink\" title=\"代码\"></a>代码</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> solution</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">typedef</span> <span class=\"type\">long</span> <span class=\"type\">long</span> LL;</span><br><span class=\"line\">    <span class=\"type\">const</span> <span class=\"type\">int</span> MAXN = <span class=\"number\">3e6</span> + <span class=\"number\">5</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> t;</span><br><span class=\"line\">    LL n;</span><br><span class=\"line\">    LL a[MAXN];</span><br><span class=\"line\">    <span class=\"keyword\">struct</span> <span class=\"title class_\">Node</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        LL l, x, r;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    Node node[MAXN];</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">auto</span> <span class=\"title\">find</span><span class=\"params\">(<span class=\"type\">int</span> pos)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        std::stack&lt;<span class=\"type\">int</span>&gt; stk;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i == pos)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">while</span> (!stk.<span class=\"built_in\">empty</span>())</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"type\">int</span> u = stk.<span class=\"built_in\">top</span>();</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (node[i].l &lt;= node[u].x &amp;&amp; node[u].x &lt;= node[i].r &amp;&amp; node[u].l &lt;= node[i].x &amp;&amp; node[i].x &lt;= node[u].r)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> std::<span class=\"built_in\">make_pair</span>(i, u);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (node[u].r &gt; node[i].r)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                stk.<span class=\"built_in\">pop</span>();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            stk.<span class=\"built_in\">push</span>(i);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> std::<span class=\"built_in\">make_pair</span>(<span class=\"number\">0</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">freopen</span>(<span class=\"string\">&quot;sekiro.in&quot;</span>, <span class=\"string\">&quot;r&quot;</span>, stdin);</span><br><span class=\"line\">        <span class=\"built_in\">freopen</span>(<span class=\"string\">&quot;sekiro.out&quot;</span>, <span class=\"string\">&quot;w&quot;</span>, stdout);</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>, &amp;t);</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (t--)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%lld&quot;</span>, &amp;n);</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%lld%lld%lld&quot;</span>, &amp;node[i].x, &amp;node[i].l, &amp;node[i].r);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">auto</span> t = <span class=\"built_in\">find</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (t == std::<span class=\"built_in\">make_pair</span>(<span class=\"number\">0</span>, <span class=\"number\">0</span>) || <span class=\"built_in\">find</span>(t.first) == std::<span class=\"built_in\">make_pair</span>(<span class=\"number\">0</span>, <span class=\"number\">0</span>) || <span class=\"built_in\">find</span>(t.second) == std::<span class=\"built_in\">make_pair</span>(<span class=\"number\">0</span>, <span class=\"number\">0</span>))</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;Yes&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;No&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    solution::<span class=\"built_in\">main</span>();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{"head":"<!-- Google tag (gtag.js) -->\n<script async src=\"https://www.googletagmanager.com/gtag/js?id=G-VX4QKX0253\"></script>\n<script>\n  window.dataLayer = window.dataLayer || [];\n  function gtag(){dataLayer.push(arguments);}\n  gtag('js', new Date());\n\n  gtag('config', 'G-VX4QKX0253');\n</script>\n<script async src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-9876722958159423\"\n     crossorigin=\"anonymous\"></script>\n<script async src=\"https://umami.kierankihn.com/script.js\" data-website-id=\"bc1a5eef-c8f3-4836-9dc5-2f90fc23e262\"></script>","footer":"萌ICP备 <a href=\"https://icp.gov.moe/?keyword=20237857\" target=\"_blank\">20237857</a> 号"}},"excerpt":"<h2 id=\"A-奶牛杀\"><a href=\"#A-奶牛杀\" class=\"headerlink\" title=\"A. 奶牛杀\"></a>A. 奶牛杀</h2><h3 id=\"题面\"><a href=\"#题面\" class=\"headerlink\" title=\"题面\"></a>题面</h3><blockquote>\n<h4 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h4><p>贝茜和她的朋友们正在玩奶牛杀。在这款游戏中，贝茜本色出演奶牛，她的 $n$ 个朋友扮演猎人。猎人从 $1$ 到 $n$ 编号，第 $i$ 个猎人有血量 $a_i$ 和攻击力 $b_i$。且第 $i$ 个猎人瞄准 $i \\bmod n+1$ 个猎人。当第 $i$ 个猎人血量小于等于 $0$时，会立刻向第 $i\\bmod n+1$ 个猎人开枪，使之血量减少 $b_i$ 点。如果它也血量变为了小于等于 $0$ 则也会开枪，有可能造成连锁开枪。</p>\n</blockquote>","more":"<blockquote>\n<p>需要注意的是，本游戏并无缩圈环节，若第 $i \\bmod n+1$ 个猎人已经退出游戏，$i$ 号会打空而非向后寻找人开枪。</p>\n<p>在奶牛杀中，没有投票环节，只有贝茜每晚上袭击一个猎人，造成 $1$ 点伤害。她现在想知道最快需要几个晚上才能杀死所有猎人？</p>\n<h4 id=\"输入格式\"><a href=\"#输入格式\" class=\"headerlink\" title=\"输入格式\"></a>输入格式</h4><p>第一行一个正整数 $n$表示猎人总数。</p>\n<p>接下来的 $n$行，第行包含两个正整数 $a_i,b_i$，分别表示第 $i$个猎人的血量和攻击力。</p>\n<h4 id=\"输出格式\"><a href=\"#输出格式\" class=\"headerlink\" title=\"输出格式\"></a>输出格式</h4><p>输出一个正整数，表示贝茜最快需要多少个晚上获得胜利。</p>\n<h4 id=\"输入输出样例\"><a href=\"#输入输出样例\" class=\"headerlink\" title=\"输入输出样例\"></a>输入输出样例</h4><h5 id=\"样例输入-1\"><a href=\"#样例输入-1\" class=\"headerlink\" title=\"样例输入 #1\"></a>样例输入 #1</h5><p>3<br>7 15<br>2 14<br>5 3</p>\n<h5 id=\"样例输出-1\"><a href=\"#样例输出-1\" class=\"headerlink\" title=\"样例输出 #1\"></a>样例输出 #1</h5><p>6</p>\n<h5 id=\"样例解释-1\"><a href=\"#样例解释-1\" class=\"headerlink\" title=\"样例解释 #1\"></a>样例解释 #1</h5><p>最佳策略是连续 $2$  个晚上攻击猎人 $2$，其死亡时的射击导致猎人 $3$  死亡，猎人 $3$  死亡时的射击对猎人 $1$  造成<br>$3$  点伤害，接下来只需要连续 $4$  个晚上攻击猎人 $1$  即可。</p>\n<h4 id=\"数据范围与约定\"><a href=\"#数据范围与约定\" class=\"headerlink\" title=\"数据范围与约定\"></a>数据范围与约定</h4><ul>\n<li>对于 $10%$ 的数据，保证 $n\\leq 10$，</li>\n<li>对于另外 $10%$ 的数据，保证 $n\\leq 100$，</li>\n<li>对于另外 $20%$ 的数据，保证 $n\\leq 1000$，</li>\n<li>对于另外 $20%$ 的数据，保证 $b_i\\leq a_{i\\ mod\\ n+1}$，</li>\n<li>对于 $100%$ 的数据，保证 $n\\leq 3*10^5,1\\leq a_i,b_i\\leq 10^{12}$。</li>\n</ul>\n</blockquote>\n<h3 id=\"题意简述\"><a href=\"#题意简述\" class=\"headerlink\" title=\"题意简述\"></a>题意简述</h3><p>给定 $n$ 个人，以及其生命值 $a_i$，这 $n$ 个人之间的关系构成一个环，每个人死亡时会对下一个人造成 $b_i$ 的伤害，你可以选择任意数量的人造成任意伤害，求为了使所有人死亡你所需要造成的伤害</p>\n<h3 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h3><p>为了方便，我们把每个人的下一个人记为 $nxt_i$，上一个人记为 $pre_i$</p>\n<p>假设我们从第 $k$ 个人开始造成伤害，那么杀掉第一个人所需要的伤害为 $a_k$，对于其余所有人，如果他的上一个人可以直接杀掉他，那么我们就不做干预，否则就另外造成伤害</p>\n<p>那么显然以第 $k$ 个人开始的所需要的伤害为：</p>\n<p>$$<br>-\\max{ {b_{pre_k} - a_k, 0} } + a_k+ \\sum \\limits_{i &#x3D; 1}^{n} \\max{ {b_{pre_i} - a_i, 0} }<br>$$</p>\n<p>那么计算出 $sum  &#x3D; \\sum \\limits_{i &#x3D; 1}^{n} \\max{ {b_{pre_i} - a_i, 0} }$，枚举每个位置更新答案即可</p>\n<p>总的时间复杂度为 $O(n)$</p>\n<h3 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> solution</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">typedef</span> <span class=\"type\">long</span> <span class=\"type\">long</span> LL;</span><br><span class=\"line\">    <span class=\"type\">const</span> <span class=\"type\">int</span> MAXN = <span class=\"number\">3e5</span> + <span class=\"number\">5</span>;</span><br><span class=\"line\">    <span class=\"type\">const</span> LL INF = <span class=\"number\">0x3f3f3f3f3f3f3f3f</span>LL;</span><br><span class=\"line\">    <span class=\"type\">int</span> n;</span><br><span class=\"line\">    LL sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">    LL ans = INF;</span><br><span class=\"line\">    LL a[MAXN], b[MAXN], c[MAXN];</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">freopen</span>(<span class=\"string\">&quot;doge.in&quot;</span>, <span class=\"string\">&quot;r&quot;</span>, stdin);</span><br><span class=\"line\">        <span class=\"built_in\">freopen</span>(<span class=\"string\">&quot;doge.out&quot;</span>, <span class=\"string\">&quot;w&quot;</span>, stdout);</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>, &amp;n);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%lld%lld&quot;</span>, &amp;a[i], &amp;b[i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            c[i % n + <span class=\"number\">1</span>] = std::<span class=\"built_in\">max</span>(<span class=\"number\">0LL</span>, a[i % n + <span class=\"number\">1</span>] - b[i]);</span><br><span class=\"line\">            sum += c[i % n + <span class=\"number\">1</span>];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            ans = std::<span class=\"built_in\">min</span>(ans, sum - c[i] + a[i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%lld\\n&quot;</span>, ans);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    solution::<span class=\"built_in\">main</span>();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"B-备餐\"><a href=\"#B-备餐\" class=\"headerlink\" title=\"B. 备餐\"></a>B. 备餐</h2><h3 id=\"题面-1\"><a href=\"#题面-1\" class=\"headerlink\" title=\"题面\"></a>题面</h3><blockquote>\n<h4 id=\"题目描述-1\"><a href=\"#题目描述-1\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h4><p>约翰要给他的奶牛们备餐，有 $n$种食物，每种食物有满意度 $a_i$。约翰将准备食物的一个非空子序列给奶牛。</p>\n<p>奶牛们对食物的要求也很高，他们要求从准备的食物中任选两个计算他们满意度的异或，如果小于他们的忍耐度 $x$就会生气。</p>\n<p>约翰想问问你，在所有 $2^n-1$ 个非空子序列中，有多少种序列满足，“任选两种食物，满意度的异或和大于等于奶牛的忍耐度 $x$”？你需要输出方案数模 $998244353$ 之后的结果。</p>\n<p>如果子序列只有一个元素，约翰认为一定是合法的。</p>\n<h4 id=\"输入格式-1\"><a href=\"#输入格式-1\" class=\"headerlink\" title=\"输入格式\"></a>输入格式</h4><p>第一行包含两个非负整数 $n,x$ 表示食物的种类数和奶牛们的忍耐度。</p>\n<p>第二行包含 $n$ 个非负整数 $a_1,a_2,…a_n$ 表示每种食物的满意度。</p>\n<h4 id=\"输出格式-1\"><a href=\"#输出格式-1\" class=\"headerlink\" title=\"输出格式\"></a>输出格式</h4><p>输出一个非负整数，表示方案数模 $998244353$ 的结果。</p>\n<h4 id=\"输入输出样例-1\"><a href=\"#输入输出样例-1\" class=\"headerlink\" title=\"输入输出样例\"></a>输入输出样例</h4><h5 id=\"样例输入-1-1\"><a href=\"#样例输入-1-1\" class=\"headerlink\" title=\"样例输入 #1\"></a>样例输入 #1</h5><p>3 0 0 1 2</p>\n<h5 id=\"样例输出-1-1\"><a href=\"#样例输出-1-1\" class=\"headerlink\" title=\"样例输出 #1\"></a>样例输出 #1</h5><p>7</p>\n<h5 id=\"样例解释-1-1\"><a href=\"#样例解释-1-1\" class=\"headerlink\" title=\"样例解释 #1\"></a>样例解释 #1</h5><p>所有的 $2^3-1$ 个非空子序列都满足条件</p>\n<h5 id=\"样例输入-2\"><a href=\"#样例输入-2\" class=\"headerlink\" title=\"样例输入 #2\"></a>样例输入 #2</h5><p>3 2 0 1 2</p>\n<h5 id=\"样例输出-2\"><a href=\"#样例输出-2\" class=\"headerlink\" title=\"样例输出 #2\"></a>样例输出 #2</h5><p>5</p>\n<h5 id=\"样例解释-2\"><a href=\"#样例解释-2\" class=\"headerlink\" title=\"样例解释 #2\"></a>样例解释 #2</h5><p>由于 $0 \\bigoplus 1&#x3D;1&lt;2$，子序列 ${0,1}$ 和子序列 ${0, 1, 2}$ 不满足条件。</p>\n<h5 id=\"样例输入-3\"><a href=\"#样例输入-3\" class=\"headerlink\" title=\"样例输入 #3\"></a>样例输入 #3</h5><p>7 4 11 5 5 8 3 1 3</p>\n<h5 id=\"样例输出-3\"><a href=\"#样例输出-3\" class=\"headerlink\" title=\"样例输出 #3\"></a>样例输出 #3</h5><p>35</p>\n<h5 id=\"样例解释-3\"><a href=\"#样例解释-3\" class=\"headerlink\" title=\"样例解释 #3\"></a>样例解释 #3</h5><p>不保证 $a_i$ 互不相同，选取不同的 $5$ 或 $3$，被认为是不同的方案。</p>\n<h4 id=\"数据范围与约定-1\"><a href=\"#数据范围与约定-1\" class=\"headerlink\" title=\"数据范围与约定\"></a>数据范围与约定</h4><ul>\n<li>对于 $100%$  的数据，保证 $1\\leq n \\leq 3*10^5$。$0\\leq a_i,x&lt; 2^{60}$。</li>\n</ul>\n</blockquote>\n<h2 id=\"C-约翰：奶牛杀手\"><a href=\"#C-约翰：奶牛杀手\" class=\"headerlink\" title=\"C. 约翰：奶牛杀手\"></a>C. 约翰：奶牛杀手</h2><h3 id=\"题面-2\"><a href=\"#题面-2\" class=\"headerlink\" title=\"题面\"></a>题面</h3><blockquote>\n<h4 id=\"题目描述-2\"><a href=\"#题目描述-2\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h4><p>约翰最近迷恋上了《只狼：影逝二度》，于是他决定拿奶牛试试手。</p>\n<p>具体来说，有 $n$个奶牛站在一个数轴上，每个奶牛有一个位置 $x_i$，还有一个警戒范围 $[l_i,r_i]$。</p>\n<p>刚开始所有奶牛都是未警戒的状态。约翰可以偷袭并瞬间杀死一个未警戒状态的奶牛 $i$，但此时所有 $x_i\\in[l_j,r_j]$ 的奶牛<br>$j$ 都会进入警戒状态并前来杀死小W，即满足i的位置位于j的警戒范围内的j。其他奶牛则会保持未警戒状态。</p>\n<p>约翰有一次复活机会，复活后仍然活着的奶牛会恢复到未警戒状态和原来的位置。但是如果复活后偷袭被别的奶牛再次被发现就会失败。</p>\n<p>约翰有 $T$ 个农场，他想问问你能否只使用偷袭和复活来通关每张地图。进入每张地图时复活次数会重置为1。</p>\n<h4 id=\"输入格式-2\"><a href=\"#输入格式-2\" class=\"headerlink\" title=\"输入格式\"></a>输入格式</h4><p>输入的第一行包含一个正整数 $T$，表示地图总数。</p>\n<p>接下来连续输入 $T$ 张地图的信息。</p>\n<p>每张地图的第一行包含一个正整数 $n$，表示这张地图中的奶牛总数。</p>\n<p>此后的 $n$ 行，每行包含三个正整数 $x_i, l_i, r_i$，表示第 $i$ 头奶牛的位置和警戒范围。保证奶牛按照坐标严格升序给出，即 $x_1 &lt; x_2 &lt; … &lt; x_n$。</p>\n<h4 id=\"输出格式-2\"><a href=\"#输出格式-2\" class=\"headerlink\" title=\"输出格式\"></a>输出格式</h4><p>输出 $T$ 行，每行包含一个字符串 <code>Yes</code> 或 <code>No</code>，分别表示约翰是否可以通过这张地图。</p>\n<h4 id=\"输入输出样例-2\"><a href=\"#输入输出样例-2\" class=\"headerlink\" title=\"输入输出样例\"></a>输入输出样例</h4><h5 id=\"样例输入-1-2\"><a href=\"#样例输入-1-2\" class=\"headerlink\" title=\"样例输入 #1\"></a>样例输入 #1</h5><p>2<br>4<br>3 1 5<br>6 2 10<br>7 4 10<br>9 8 11<br>3<br>1 1 3<br>2 1 3<br>3 1 3</p>\n<h5 id=\"样例输出-1-2\"><a href=\"#样例输出-1-2\" class=\"headerlink\" title=\"样例输出 #1\"></a>样例输出 #1</h5><p>Yes<br>No</p>\n<h5 id=\"样例解释-1-2\"><a href=\"#样例解释-1-2\" class=\"headerlink\" title=\"样例解释 #1\"></a>样例解释 #1</h5><p>对于第一张地图，约翰可以首先对第二个奶牛（位置为 6）发动偷袭，并会被第三个奶牛杀死。在复生后，他可以按照三，一，四的顺序分别杀死剩余的三个奶牛，并且不会引起敌人的警觉。<br>对于第二张地图，可以发现无论如何安排顺序，约翰都被顺序中最后 的那个敌人杀死两次，用完所有的复生机会。</p>\n<h4 id=\"数据范围与约定-2\"><a href=\"#数据范围与约定-2\" class=\"headerlink\" title=\"数据范围与约定\"></a>数据范围与约定</h4><p>对于 $100%$ 的数据，保证 $1\\leq T\\leq 10^5,1\\leq n \\leq 10^6,\\sum n\\leq 3*10^6,1\\leq l_i\\leq x_i\\leq r_i\\leq 10^9,1\\leq x_1&lt;x_2&lt;…&lt;x_n\\leq 10^9$。</p>\n</blockquote>\n<h3 id=\"题意简述-1\"><a href=\"#题意简述-1\" class=\"headerlink\" title=\"题意简述\"></a>题意简述</h3><p>给定 $n$ 个区间，每个区间包含三个信息：$x_i, l_i, r_i$，求判断能否在删除某个区间之后，可以通过每次选择一个“ $x_i$ 不属于任何其他未删除的区间的 $l_j, r_j$ 的区间”删除掉，使得所有区间最后都被删除</p>\n<h3 id=\"暴力做法\"><a href=\"#暴力做法\" class=\"headerlink\" title=\"暴力做法\"></a>暴力做法</h3><p>简化题意，可以通过相互包含的关系建出一张有向图，图上有环时则无法处理，只能将某个区间删除掉</p>\n<p>那么可以通过枚举环上的点删除，拓扑排序判断图中是否还有其他环的方法来解决，时间复杂度为 $O(n ^ 3)$</p>\n<p>可以发现如下性质：图中如果存在环，那么必定存在二元环，</p>\n<p>以三元环为例，假设图中有三元环 $a, b, c$，不妨设 $x_a &lt; x_b &lt; x_c$，显然 $b$ 可以在 $a$ 的区间内，$c$ 可以在 $b$ 的区间内，又因为构成环，那么 $a$ 或 $b$ 必定有一个在 $c$ 的区间内，显然无论哪种情况，图中都有二元环，故命题得证</p>\n<p>那么现在的问题就变成了在图中找二元环的问题</p>\n<p>首先可以在图中找出任意一对二元环，对环上的两个点枚举删除，判断图中是否还有其他二元环</p>\n<p>判断二元环时可以从左向右枚举每个点，同时维护一个栈，栈中的元素从栈底到栈顶 $x$ 递增，$r$ 递减，$x$ 递增保证了栈中元素最可能被包含在其他区间中，$r$ 递减保证了区间中的元素最可能包含其他元素，那么对于每个当前枚举到的元素 $i$，一直弹出栈中元素，直到栈中元素的 $r$ 大于 $i$ 的 $r$ 为止，对于弹出的每个元素以及最后的栈顶，判断其与 $i$ 是否构成二元环，如果枚举完了都没有找到，说明图中不存在二元环 ，也就说明原图为有向无环图</p>\n<p>下面考虑证明正确性</p>\n<p>假设图中存在二元环 $a, b$，不妨设 $a_x &lt; b_x$，那么一定有 $a_l \\le b_x \\le a_r$，分两以下几种情况讨论：</p>\n<ul>\n<li>枚举到 $b$ 时 $a$ 未被弹出栈， 此时要么枚举到 $b$ 时与 $a$ 进行判断，发现 $a, b$ 的环，要么枚举到后边某个位置 $c$ 时，发现一个更大的环</li>\n<li>枚举到 $b$ 时 $a$ 已经出栈，说明在前边某个位置 $c$，$a$ 已经和 $c$ 构成环</li>\n</ul>\n<p>故若图中有环，那么该算法一定可以找到</p>\n<h3 id=\"代码-1\"><a href=\"#代码-1\" class=\"headerlink\" title=\"代码\"></a>代码</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> solution</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">typedef</span> <span class=\"type\">long</span> <span class=\"type\">long</span> LL;</span><br><span class=\"line\">    <span class=\"type\">const</span> <span class=\"type\">int</span> MAXN = <span class=\"number\">3e6</span> + <span class=\"number\">5</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> t;</span><br><span class=\"line\">    LL n;</span><br><span class=\"line\">    LL a[MAXN];</span><br><span class=\"line\">    <span class=\"keyword\">struct</span> <span class=\"title class_\">Node</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        LL l, x, r;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    Node node[MAXN];</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">auto</span> <span class=\"title\">find</span><span class=\"params\">(<span class=\"type\">int</span> pos)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        std::stack&lt;<span class=\"type\">int</span>&gt; stk;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i == pos)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">while</span> (!stk.<span class=\"built_in\">empty</span>())</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"type\">int</span> u = stk.<span class=\"built_in\">top</span>();</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (node[i].l &lt;= node[u].x &amp;&amp; node[u].x &lt;= node[i].r &amp;&amp; node[u].l &lt;= node[i].x &amp;&amp; node[i].x &lt;= node[u].r)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> std::<span class=\"built_in\">make_pair</span>(i, u);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (node[u].r &gt; node[i].r)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                stk.<span class=\"built_in\">pop</span>();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            stk.<span class=\"built_in\">push</span>(i);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> std::<span class=\"built_in\">make_pair</span>(<span class=\"number\">0</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">freopen</span>(<span class=\"string\">&quot;sekiro.in&quot;</span>, <span class=\"string\">&quot;r&quot;</span>, stdin);</span><br><span class=\"line\">        <span class=\"built_in\">freopen</span>(<span class=\"string\">&quot;sekiro.out&quot;</span>, <span class=\"string\">&quot;w&quot;</span>, stdout);</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>, &amp;t);</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (t--)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%lld&quot;</span>, &amp;n);</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%lld%lld%lld&quot;</span>, &amp;node[i].x, &amp;node[i].l, &amp;node[i].r);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">auto</span> t = <span class=\"built_in\">find</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (t == std::<span class=\"built_in\">make_pair</span>(<span class=\"number\">0</span>, <span class=\"number\">0</span>) || <span class=\"built_in\">find</span>(t.first) == std::<span class=\"built_in\">make_pair</span>(<span class=\"number\">0</span>, <span class=\"number\">0</span>) || <span class=\"built_in\">find</span>(t.second) == std::<span class=\"built_in\">make_pair</span>(<span class=\"number\">0</span>, <span class=\"number\">0</span>))</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;Yes&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;No&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    solution::<span class=\"built_in\">main</span>();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"}],"PostAsset":[],"PostCategory":[{"post_id":"clo2pki6f0003xggc78f7fba7","category_id":"clo2pki6i0004xggc2uc3c0a6","_id":"clo2pki6k0007xggccvoech5h"}],"PostTag":[{"post_id":"clo2pki6f0003xggc78f7fba7","tag_id":"clo2pki6j0005xggc48109pkf","_id":"clo2pki6m000exggcaxuygarw"},{"post_id":"clo2pki6f0003xggc78f7fba7","tag_id":"clo2pki6j0006xggc3kvo8wns","_id":"clo2pki6m000fxggc5ky2bgv5"},{"post_id":"clo2pki6f0003xggc78f7fba7","tag_id":"clo2pki6k0008xggcfwz44gkr","_id":"clo2pki6m000gxggc4m9w8k2a"},{"post_id":"clo2pki6f0003xggc78f7fba7","tag_id":"clo2pki6k0009xggc7l444z2c","_id":"clo2pki6m000hxggchh8igtdf"},{"post_id":"clo2pki6f0003xggc78f7fba7","tag_id":"clo2pki6k000axggcgpcr1ylt","_id":"clo2pki6m000ixggca4b25x71"},{"post_id":"clo2pki6f0003xggc78f7fba7","tag_id":"clo2pki6l000bxggc3vo3af1b","_id":"clo2pki6m000jxggc7e5e149j"},{"post_id":"clo2pki6f0003xggc78f7fba7","tag_id":"clo2pki6l000cxggc2nj1fcce","_id":"clo2pki6m000kxggcbkfjae3d"},{"post_id":"clo2pki6f0003xggc78f7fba7","tag_id":"clo2pki6l000dxggc77ixf423","_id":"clo2pki6m000lxggcab0a0vso"}],"Tag":[{"name":"贪心","_id":"clo2pki6j0005xggc48109pkf"},{"name":"Trie","_id":"clo2pki6j0006xggc3kvo8wns"},{"name":"动态规划","_id":"clo2pki6k0008xggcfwz44gkr"},{"name":"数学","_id":"clo2pki6k0009xggc7l444z2c"},{"name":"图论","_id":"clo2pki6k000axggcgpcr1ylt"},{"name":"树","_id":"clo2pki6l000bxggc3vo3af1b"},{"name":"线段树","_id":"clo2pki6l000cxggc2nj1fcce"},{"name":"扫描线","_id":"clo2pki6l000dxggc77ixf423"}]}}